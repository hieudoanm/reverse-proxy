@layer properties {
	@supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or
		((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
		*,
		:before,
		:after {
			--tw-border-style: solid;
			--tw-font-weight: initial;
		}
		::backdrop {
			--tw-border-style: solid;
			--tw-font-weight: initial;
		}
	}
}
@layer theme {
	:root,
	:host {
		--color-neutral-800: #262626;
		--color-black: #000;
		--spacing: 0.25rem;
		--text-xl: 1.25rem;
		--text-xl--line-height: calc(1.75 / 1.25);
		--font-weight-bold: 700;
		--default-font-family: var(--font-geist-sans);
		--default-mono-font-family: var(--font-geist-mono);
	}
	@supports (color: color(display-p3 0 0 0)) {
		:root,
		:host {
			--color-neutral-800: color(display-p3 0.149382 0.149382 0.149382);
		}
	}
	@supports (color: lab(0% 0 0)) {
		:root,
		:host {
			--color-neutral-800: lab(15.204% 0 -0.00000596046);
		}
	}
}
@layer base {
	*,
	:after,
	:before {
		box-sizing: border-box;
		border: 0 solid;
		margin: 0;
		padding: 0;
	}
	::backdrop {
		box-sizing: border-box;
		border: 0 solid;
		margin: 0;
		padding: 0;
	}
	::-webkit-file-upload-button {
		box-sizing: border-box;
		border: 0 solid;
		margin: 0;
		padding: 0;
	}
	::file-selector-button {
		box-sizing: border-box;
		border: 0 solid;
		margin: 0;
		padding: 0;
	}
	html,
	:host {
		-webkit-text-size-adjust: 100%;
		-moz-tab-size: 4;
		tab-size: 4;
		line-height: 1.5;
		font-family: var(
			--default-font-family,
			ui-sans-serif,
			system-ui,
			sans-serif,
			'Apple Color Emoji',
			'Segoe UI Emoji',
			'Segoe UI Symbol',
			'Noto Color Emoji'
		);
		font-feature-settings: var(--default-font-feature-settings, normal);
		font-variation-settings: var(--default-font-variation-settings, normal);
		-webkit-tap-highlight-color: transparent;
	}
	hr {
		height: 0;
		color: inherit;
		border-top-width: 1px;
	}
	abbr:where([title]) {
		-webkit-text-decoration: underline dotted;
		text-decoration: underline dotted;
	}
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		font-size: inherit;
		font-weight: inherit;
	}
	a {
		color: inherit;
		-webkit-text-decoration: inherit;
		-webkit-text-decoration: inherit;
		-webkit-text-decoration: inherit;
		-webkit-text-decoration: inherit;
		text-decoration: inherit;
	}
	b,
	strong {
		font-weight: bolder;
	}
	code,
	kbd,
	samp,
	pre {
		font-family: var(
			--default-mono-font-family,
			ui-monospace,
			SFMono-Regular,
			Menlo,
			Monaco,
			Consolas,
			'Liberation Mono',
			'Courier New',
			monospace
		);
		font-feature-settings: var(--default-mono-font-feature-settings, normal);
		font-variation-settings: var(
			--default-mono-font-variation-settings,
			normal
		);
		font-size: 1em;
	}
	small {
		font-size: 80%;
	}
	sub,
	sup {
		vertical-align: baseline;
		font-size: 75%;
		line-height: 0;
		position: relative;
	}
	sub {
		bottom: -0.25em;
	}
	sup {
		top: -0.5em;
	}
	table {
		text-indent: 0;
		border-color: inherit;
		border-collapse: collapse;
	}
	:-moz-focusring {
		outline: auto;
	}
	progress {
		vertical-align: baseline;
	}
	summary {
		display: list-item;
	}
	ol,
	ul,
	menu {
		list-style: none;
	}
	img,
	svg,
	video,
	canvas,
	audio,
	iframe,
	embed,
	object {
		vertical-align: middle;
		display: block;
	}
	img,
	video {
		max-width: 100%;
		height: auto;
	}
	button,
	input,
	select,
	optgroup,
	textarea {
		font: inherit;
		font-feature-settings: inherit;
		font-variation-settings: inherit;
		letter-spacing: inherit;
		color: inherit;
		opacity: 1;
		background-color: transparent;
		border-radius: 0;
	}
	::-webkit-file-upload-button {
		font: inherit;
		font-feature-settings: inherit;
		font-variation-settings: inherit;
		letter-spacing: inherit;
		color: inherit;
		opacity: 1;
		background-color: transparent;
		border-radius: 0;
	}
	::file-selector-button {
		font: inherit;
		font-feature-settings: inherit;
		font-variation-settings: inherit;
		letter-spacing: inherit;
		color: inherit;
		opacity: 1;
		background-color: transparent;
		border-radius: 0;
	}
	:where(select:-webkit-any([multiple], [size])) optgroup {
		font-weight: bolder;
	}
	:where(select:-moz-any([multiple], [size])) optgroup {
		font-weight: bolder;
	}
	:where(select:is([multiple], [size])) optgroup {
		font-weight: bolder;
	}
	:where(select:-webkit-any([multiple], [size]))
		optgroup
		option:not(
			:-webkit-any(
				:lang(ae),
				:lang(ar),
				:lang(arc),
				:lang(bcc),
				:lang(bqi),
				:lang(ckb),
				:lang(dv),
				:lang(fa),
				:lang(glk),
				:lang(he),
				:lang(ku),
				:lang(mzn),
				:lang(nqo),
				:lang(pnb),
				:lang(ps),
				:lang(sd),
				:lang(ug),
				:lang(ur),
				:lang(yi)
			)
		) {
		padding-left: 20px;
	}
	:where(select:-moz-any([multiple], [size]))
		optgroup
		option:not(
			:-moz-any(
				:lang(ae),
				:lang(ar),
				:lang(arc),
				:lang(bcc),
				:lang(bqi),
				:lang(ckb),
				:lang(dv),
				:lang(fa),
				:lang(glk),
				:lang(he),
				:lang(ku),
				:lang(mzn),
				:lang(nqo),
				:lang(pnb),
				:lang(ps),
				:lang(sd),
				:lang(ug),
				:lang(ur),
				:lang(yi)
			)
		) {
		padding-left: 20px;
	}
	:where(select:is([multiple], [size]))
		optgroup
		option:not(
			:is(
				:lang(ae),
				:lang(ar),
				:lang(arc),
				:lang(bcc),
				:lang(bqi),
				:lang(ckb),
				:lang(dv),
				:lang(fa),
				:lang(glk),
				:lang(he),
				:lang(ku),
				:lang(mzn),
				:lang(nqo),
				:lang(pnb),
				:lang(ps),
				:lang(sd),
				:lang(ug),
				:lang(ur),
				:lang(yi)
			)
		) {
		padding-left: 20px;
	}
	:where(select:-webkit-any([multiple], [size]))
		optgroup
		option:-webkit-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		padding-right: 20px;
	}
	:where(select:-moz-any([multiple], [size]))
		optgroup
		option:-moz-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		padding-right: 20px;
	}
	:where(select:is([multiple], [size]))
		optgroup
		option:is(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		padding-right: 20px;
	}
	:not(
		:-webkit-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)
	)::-webkit-file-upload-button {
		margin-right: 4px;
	}
	:not(
		:-moz-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)
	)::file-selector-button {
		margin-right: 4px;
	}
	:not(
		:is(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)
	)::file-selector-button {
		margin-right: 4px;
	}
	:-webkit-any(
		:lang(ae),
		:lang(ar),
		:lang(arc),
		:lang(bcc),
		:lang(bqi),
		:lang(ckb),
		:lang(dv),
		:lang(fa),
		:lang(glk),
		:lang(he),
		:lang(ku),
		:lang(mzn),
		:lang(nqo),
		:lang(pnb),
		:lang(ps),
		:lang(sd),
		:lang(ug),
		:lang(ur),
		:lang(yi)
	)::-webkit-file-upload-button {
		margin-left: 4px;
	}
	:-moz-any(
		:lang(ae),
		:lang(ar),
		:lang(arc),
		:lang(bcc),
		:lang(bqi),
		:lang(ckb),
		:lang(dv),
		:lang(fa),
		:lang(glk),
		:lang(he),
		:lang(ku),
		:lang(mzn),
		:lang(nqo),
		:lang(pnb),
		:lang(ps),
		:lang(sd),
		:lang(ug),
		:lang(ur),
		:lang(yi)
	)::file-selector-button {
		margin-left: 4px;
	}
	:is(
		:lang(ae),
		:lang(ar),
		:lang(arc),
		:lang(bcc),
		:lang(bqi),
		:lang(ckb),
		:lang(dv),
		:lang(fa),
		:lang(glk),
		:lang(he),
		:lang(ku),
		:lang(mzn),
		:lang(nqo),
		:lang(pnb),
		:lang(ps),
		:lang(sd),
		:lang(ug),
		:lang(ur),
		:lang(yi)
	)::file-selector-button {
		margin-left: 4px;
	}
	::placeholder {
		opacity: 1;
	}
	@supports (not ((-webkit-appearance: -apple-pay-button))) or
		(contain-intrinsic-size: 1px) {
		::placeholder {
			color: currentColor;
		}
		@supports (color: color-mix(in lab, red, red)) {
			::placeholder {
				color: color-mix(in oklab, currentcolor 50%, transparent);
			}
		}
	}
	textarea {
		resize: vertical;
	}
	::-webkit-search-decoration {
		-webkit-appearance: none;
	}
	::-webkit-date-and-time-value {
		min-height: 1lh;
		text-align: inherit;
	}
	::-webkit-datetime-edit {
		display: inline-flex;
	}
	::-webkit-datetime-edit-fields-wrapper {
		padding: 0;
	}
	::-webkit-datetime-edit {
		padding-top: 0;
		padding-bottom: 0;
	}
	::-webkit-datetime-edit-year-field {
		padding-top: 0;
		padding-bottom: 0;
	}
	::-webkit-datetime-edit-month-field {
		padding-top: 0;
		padding-bottom: 0;
	}
	::-webkit-datetime-edit-day-field {
		padding-top: 0;
		padding-bottom: 0;
	}
	::-webkit-datetime-edit-hour-field {
		padding-top: 0;
		padding-bottom: 0;
	}
	::-webkit-datetime-edit-minute-field {
		padding-top: 0;
		padding-bottom: 0;
	}
	::-webkit-datetime-edit-second-field {
		padding-top: 0;
		padding-bottom: 0;
	}
	::-webkit-datetime-edit-millisecond-field {
		padding-top: 0;
		padding-bottom: 0;
	}
	::-webkit-datetime-edit-meridiem-field {
		padding-top: 0;
		padding-bottom: 0;
	}
	::-webkit-calendar-picker-indicator {
		line-height: 1;
	}
	:-moz-ui-invalid {
		box-shadow: none;
	}
	button {
		-webkit-appearance: button;
		-moz-appearance: button;
		appearance: button;
	}
	input:where([type='button'], [type='reset'], [type='submit']) {
		-webkit-appearance: button;
		-moz-appearance: button;
		appearance: button;
	}
	::-webkit-file-upload-button {
		-webkit-appearance: button;
		-moz-appearance: button;
		appearance: button;
	}
	::file-selector-button {
		-webkit-appearance: button;
		-moz-appearance: button;
		appearance: button;
	}
	::-webkit-inner-spin-button {
		height: auto;
	}
	::-webkit-outer-spin-button {
		height: auto;
	}
	[hidden]:where(:not([hidden='until-found'])) {
		display: none !important;
	}
	@supports (color: color(display-p3 0 0 0)) {
		[data-theme='light'] {
			--color-base-100: color(display-p3 1 1 1);
			--color-base-200: color(display-p3 0.973691 0.973691 0.973691);
			--color-base-300: color(display-p3 0.93448 0.93448 0.93448);
			--color-base-content: color(display-p3 0.0937957 0.093793 0.104806);
			--color-primary: color(display-p3 0.244907 0.16847 0.802628);
			--color-primary-content: color(display-p3 0.883035 0.90499 0.993138);
			--color-secondary: color(display-p3 0.880667 0.26782 0.587861);
			--color-secondary-content: color(display-p3 0.964052 0.897855 0.939789);
			--color-accent: color(display-p3 0.312493 0.813034 0.735662);
			--color-accent-content: color(display-p3 0.128725 0.296875 0.284306);
			--color-neutral: color(display-p3 0.0346186 0.034606 0.0427327);
			--color-neutral-content: color(display-p3 0.894477 0.894477 0.905114);
			--color-info: color(display-p3 0.297526 0.717371 0.972161);
			--color-info-content: color(display-p3 0.0695709 0.177759 0.278667);
			--color-success: color(display-p3 0.32762 0.813141 0.585553);
			--color-success-content: color(display-p3 0.108674 0.294366 0.226358);
			--color-warning: color(display-p3 0.94863 0.728271 0.0946339);
			--color-warning-content: color(display-p3 0.441203 0.212026 0.0773632);
			--color-error: color(display-p3 0.940178 0.428237 0.500757);
			--color-error-content: color(display-p3 0.274274 0.0392692 0.0981547);
		}
	}
	@supports (color: lab(0% 0 0)) {
		[data-theme='light'] {
			--color-base-100: lab(100% 0 0);
			--color-base-200: lab(97.68% -0.0000298023 0.0000119209);
			--color-base-300: lab(94.2% 0 0);
			--color-base-content: lab(8.30603% 0.618205 -2.16572);
			--color-primary: lab(31.573% 49.867 -84.7065);
			--color-primary-content: lab(91.6577% 1.04591 -12.7199);
			--color-secondary: lab(56.234% 76.7852 -8.06803);
			--color-secondary-content: lab(92.6584% 9.01151 -3.1507);
			--color-accent: lab(75.1988% -53.3697 -2.27784);
			--color-accent-content: lab(28.81% -21.4781 -3.59725);
			--color-neutral: lab(2.45787% 0.239417 -0.873864);
			--color-neutral-content: lab(90.6853% 0.399232 -1.45452);
			--color-info: lab(69.9876% -23.5256 -45.9352);
			--color-info-content: lab(17.4794% -5.25944 -21.1512);
			--color-success: lab(74.4967% -60.7579 19.4189);
			--color-success-content: lab(27.9355% -26.9592 5.46191);
			--color-warning: lab(79.2305% 16.6936 100.392);
			--color-warning-content: lab(30.7627% 30.2938 40.2828);
			--color-error: lab(64.1803% 63.0275 19.2122);
			--color-error-content: lab(14.1162% 34.0067 9.81536);
		}
	}
	:where(:root) {
		--lightningcss-light: initial;
		--lightningcss-dark: ;
		color-scheme: light;
		--color-base-100: #fff;
		--color-base-200: #f8f8f8;
		--color-base-300: #eee;
		--color-base-content: #18181b;
		--color-primary: #422ad5;
		--color-primary-content: #e0e7ff;
		--color-secondary: #f43098;
		--color-secondary-content: #f9e4f0;
		--color-accent: #00d1bb;
		--color-accent-content: #084d49;
		--color-neutral: #09090b;
		--color-neutral-content: #e4e4e7;
		--color-info: #00bafc;
		--color-info-content: #042e49;
		--color-success: #00d193;
		--color-success-content: #004c39;
		--color-warning: #f9b800;
		--color-warning-content: #793205;
		--color-error: #ff657f;
		--color-error-content: #4d0218;
		--radius-selector: 0.5rem;
		--radius-field: 0.25rem;
		--radius-box: 0.5rem;
		--size-selector: 0.25rem;
		--size-field: 0.25rem;
		--border: 1px;
		--depth: 1;
		--noise: 0;
	}
	@supports (color: color(display-p3 0 0 0)) {
		:where(:root) {
			--color-base-100: color(display-p3 1 1 1);
			--color-base-200: color(display-p3 0.973691 0.973691 0.973691);
			--color-base-300: color(display-p3 0.93448 0.93448 0.93448);
			--color-base-content: color(display-p3 0.0937957 0.093793 0.104806);
			--color-primary: color(display-p3 0.244907 0.16847 0.802628);
			--color-primary-content: color(display-p3 0.883035 0.90499 0.993138);
			--color-secondary: color(display-p3 0.880667 0.26782 0.587861);
			--color-secondary-content: color(display-p3 0.964052 0.897855 0.939789);
			--color-accent: color(display-p3 0.312493 0.813034 0.735662);
			--color-accent-content: color(display-p3 0.128725 0.296875 0.284306);
			--color-neutral: color(display-p3 0.0346186 0.034606 0.0427327);
			--color-neutral-content: color(display-p3 0.894477 0.894477 0.905114);
			--color-info: color(display-p3 0.297526 0.717371 0.972161);
			--color-info-content: color(display-p3 0.0695709 0.177759 0.278667);
			--color-success: color(display-p3 0.32762 0.813141 0.585553);
			--color-success-content: color(display-p3 0.108674 0.294366 0.226358);
			--color-warning: color(display-p3 0.94863 0.728271 0.0946339);
			--color-warning-content: color(display-p3 0.441203 0.212026 0.0773632);
			--color-error: color(display-p3 0.940178 0.428237 0.500757);
			--color-error-content: color(display-p3 0.274274 0.0392692 0.0981547);
		}
	}
	@supports (color: lab(0% 0 0)) {
		:where(:root) {
			--color-base-100: lab(100% 0 0);
			--color-base-200: lab(97.68% -0.0000298023 0.0000119209);
			--color-base-300: lab(94.2% 0 0);
			--color-base-content: lab(8.30603% 0.618205 -2.16572);
			--color-primary: lab(31.573% 49.867 -84.7065);
			--color-primary-content: lab(91.6577% 1.04591 -12.7199);
			--color-secondary: lab(56.234% 76.7852 -8.06803);
			--color-secondary-content: lab(92.6584% 9.01151 -3.1507);
			--color-accent: lab(75.1988% -53.3697 -2.27784);
			--color-accent-content: lab(28.81% -21.4781 -3.59725);
			--color-neutral: lab(2.45787% 0.239417 -0.873864);
			--color-neutral-content: lab(90.6853% 0.399232 -1.45452);
			--color-info: lab(69.9876% -23.5256 -45.9352);
			--color-info-content: lab(17.4794% -5.25944 -21.1512);
			--color-success: lab(74.4967% -60.7579 19.4189);
			--color-success-content: lab(27.9355% -26.9592 5.46191);
			--color-warning: lab(79.2305% 16.6936 100.392);
			--color-warning-content: lab(30.7627% 30.2938 40.2828);
			--color-error: lab(64.1803% 63.0275 19.2122);
			--color-error-content: lab(14.1162% 34.0067 9.81536);
		}
	}
	:root:has(input.theme-controller[value='light']:checked) {
		--lightningcss-light: initial;
		--lightningcss-dark: ;
		color-scheme: light;
		--color-base-100: #fff;
		--color-base-200: #f8f8f8;
		--color-base-300: #eee;
		--color-base-content: #18181b;
		--color-primary: #422ad5;
		--color-primary-content: #e0e7ff;
		--color-secondary: #f43098;
		--color-secondary-content: #f9e4f0;
		--color-accent: #00d1bb;
		--color-accent-content: #084d49;
		--color-neutral: #09090b;
		--color-neutral-content: #e4e4e7;
		--color-info: #00bafc;
		--color-info-content: #042e49;
		--color-success: #00d193;
		--color-success-content: #004c39;
		--color-warning: #f9b800;
		--color-warning-content: #793205;
		--color-error: #ff657f;
		--color-error-content: #4d0218;
		--radius-selector: 0.5rem;
		--radius-field: 0.25rem;
		--radius-box: 0.5rem;
		--size-selector: 0.25rem;
		--size-field: 0.25rem;
		--border: 1px;
		--depth: 1;
		--noise: 0;
	}
	@supports (color: color(display-p3 0 0 0)) {
		:root:has(input.theme-controller[value='light']:checked) {
			--color-base-100: color(display-p3 1 1 1);
			--color-base-200: color(display-p3 0.973691 0.973691 0.973691);
			--color-base-300: color(display-p3 0.93448 0.93448 0.93448);
			--color-base-content: color(display-p3 0.0937957 0.093793 0.104806);
			--color-primary: color(display-p3 0.244907 0.16847 0.802628);
			--color-primary-content: color(display-p3 0.883035 0.90499 0.993138);
			--color-secondary: color(display-p3 0.880667 0.26782 0.587861);
			--color-secondary-content: color(display-p3 0.964052 0.897855 0.939789);
			--color-accent: color(display-p3 0.312493 0.813034 0.735662);
			--color-accent-content: color(display-p3 0.128725 0.296875 0.284306);
			--color-neutral: color(display-p3 0.0346186 0.034606 0.0427327);
			--color-neutral-content: color(display-p3 0.894477 0.894477 0.905114);
			--color-info: color(display-p3 0.297526 0.717371 0.972161);
			--color-info-content: color(display-p3 0.0695709 0.177759 0.278667);
			--color-success: color(display-p3 0.32762 0.813141 0.585553);
			--color-success-content: color(display-p3 0.108674 0.294366 0.226358);
			--color-warning: color(display-p3 0.94863 0.728271 0.0946339);
			--color-warning-content: color(display-p3 0.441203 0.212026 0.0773632);
			--color-error: color(display-p3 0.940178 0.428237 0.500757);
			--color-error-content: color(display-p3 0.274274 0.0392692 0.0981547);
		}
	}
	@supports (color: lab(0% 0 0)) {
		:root:has(input.theme-controller[value='light']:checked) {
			--color-base-100: lab(100% 0 0);
			--color-base-200: lab(97.68% -0.0000298023 0.0000119209);
			--color-base-300: lab(94.2% 0 0);
			--color-base-content: lab(8.30603% 0.618205 -2.16572);
			--color-primary: lab(31.573% 49.867 -84.7065);
			--color-primary-content: lab(91.6577% 1.04591 -12.7199);
			--color-secondary: lab(56.234% 76.7852 -8.06803);
			--color-secondary-content: lab(92.6584% 9.01151 -3.1507);
			--color-accent: lab(75.1988% -53.3697 -2.27784);
			--color-accent-content: lab(28.81% -21.4781 -3.59725);
			--color-neutral: lab(2.45787% 0.239417 -0.873864);
			--color-neutral-content: lab(90.6853% 0.399232 -1.45452);
			--color-info: lab(69.9876% -23.5256 -45.9352);
			--color-info-content: lab(17.4794% -5.25944 -21.1512);
			--color-success: lab(74.4967% -60.7579 19.4189);
			--color-success-content: lab(27.9355% -26.9592 5.46191);
			--color-warning: lab(79.2305% 16.6936 100.392);
			--color-warning-content: lab(30.7627% 30.2938 40.2828);
			--color-error: lab(64.1803% 63.0275 19.2122);
			--color-error-content: lab(14.1162% 34.0067 9.81536);
		}
	}
	@media (prefers-color-scheme: dark) {
		:root:not([data-theme]) {
			--lightningcss-light: ;
			--lightningcss-dark: initial;
			color-scheme: dark;
			--color-base-100: #000;
			--color-base-200: #141414;
			--color-base-300: #1b1b1b;
			--color-base-content: #d6d6d6;
			--color-primary: #3a3a3a;
			--color-primary-content: #fff;
			--color-secondary: #3a3a3a;
			--color-secondary-content: #fff;
			--color-accent: #3a3a3a;
			--color-accent-content: #fff;
			--color-neutral: #3a3a3a;
			--color-neutral-content: #fff;
			--color-info: #002cea;
			--color-info-content: #c9dbff;
			--color-success: #028002;
			--color-success-content: #d3e6d0;
			--color-warning: #ff0;
			--color-warning-content: #161600;
			--color-error: #ff0301;
			--color-error-content: #160000;
			--radius-selector: 0rem;
			--radius-field: 0rem;
			--radius-box: 0rem;
			--size-selector: 0.25rem;
			--size-field: 0.25rem;
			--border: 1px;
			--depth: 0;
			--noise: 0;
		}
		@supports (color: color(display-p3 0 0 0)) {
			:root:not([data-theme]) {
				--color-base-100: color(display-p3 0 0 0);
				--color-base-200: color(display-p3 0.077341 0.077341 0.077341);
				--color-base-300: color(display-p3 0.103957 0.103957 0.103957);
				--color-base-content: color(display-p3 0.839207 0.839207 0.839208);
				--color-primary: color(display-p3 0.229013 0.229013 0.229013);
				--color-primary-content: color(display-p3 1 1 1);
				--color-secondary: color(display-p3 0.229013 0.229013 0.229013);
				--color-secondary-content: color(display-p3 1 1 1);
				--color-accent: color(display-p3 0.229013 0.229013 0.229013);
				--color-accent-content: color(display-p3 1 1 1);
				--color-neutral: color(display-p3 0.229013 0.229013 0.229013);
				--color-neutral-content: color(display-p3 1 1 1);
				--color-info: color(display-p3 0.00020985 0.00186519 0.95915);
				--color-info-content: color(display-p3 0.793058 0.857417 1.00923);
				--color-success: color(display-p3 0.217389 0.493859 0.133731);
				--color-success-content: color(display-p3 0.839771 0.898373 0.824121);
				--color-warning: color(display-p3 0.999997 0.999995 0.330921);
				--color-warning-content: color(
					display-p3 0.0860667 0.0860859 0.00953524
				);
				--color-error: color(display-p3 0.916609 0.202449 0.140493);
				--color-error-content: color(
					display-p3 0.0746094 0.00370725 0.00193291
				);
			}
		}
		@supports (color: lab(0% 0 0)) {
			:root:not([data-theme]) {
				--color-base-100: lab(0% 0 0);
				--color-base-200: lab(6.19571% 0 0);
				--color-base-300: lab(9.52% -0.00000745058 0);
				--color-base-content: lab(85.6264% -0.0000298023 0.0000119209);
				--color-primary: lab(24.6% 0 0);
				--color-primary-content: lab(100% 0 0);
				--color-secondary: lab(24.6% 0 0);
				--color-secondary-content: lab(100% 0 0);
				--color-accent: lab(24.6% 0 0);
				--color-accent-content: lab(100% 0 0);
				--color-neutral: lab(24.6% 0 0);
				--color-neutral-content: lab(100% 0 0);
				--color-info: lab(29.5786% 68.1828 -111.947);
				--color-info-content: lab(86.9649% -0.614971 -22.8506);
				--color-success: lab(46.2693% -47.3199 48.2556);
				--color-success-content: lab(89.311% -9.46093 8.0988);
				--color-warning: lab(97.6067% -15.7493 93.39);
				--color-warning-content: lab(6.78697% -2.72717 9.99282);
				--color-error: lab(54.2976% 80.5821 69.4726);
				--color-error-content: lab(1.60986% 7.06433 2.5444);
			}
		}
	}
	[data-theme='light'] {
		--lightningcss-light: initial;
		--lightningcss-dark: ;
		color-scheme: light;
		--color-base-100: #fff;
		--color-base-200: #f8f8f8;
		--color-base-300: #eee;
		--color-base-content: #18181b;
		--color-primary: #422ad5;
		--color-primary-content: #e0e7ff;
		--color-secondary: #f43098;
		--color-secondary-content: #f9e4f0;
		--color-accent: #00d1bb;
		--color-accent-content: #084d49;
		--color-neutral: #09090b;
		--color-neutral-content: #e4e4e7;
		--color-info: #00bafc;
		--color-info-content: #042e49;
		--color-success: #00d193;
		--color-success-content: #004c39;
		--color-warning: #f9b800;
		--color-warning-content: #793205;
		--color-error: #ff657f;
		--color-error-content: #4d0218;
		--radius-selector: 0.5rem;
		--radius-field: 0.25rem;
		--radius-box: 0.5rem;
		--size-selector: 0.25rem;
		--size-field: 0.25rem;
		--border: 1px;
		--depth: 1;
		--noise: 0;
	}
	@supports (color: color(display-p3 0 0 0)) {
		[data-theme='light'] {
			--color-base-100: color(display-p3 1 1 1);
			--color-base-200: color(display-p3 0.973691 0.973691 0.973691);
			--color-base-300: color(display-p3 0.93448 0.93448 0.93448);
			--color-base-content: color(display-p3 0.0937957 0.093793 0.104806);
			--color-primary: color(display-p3 0.244907 0.16847 0.802628);
			--color-primary-content: color(display-p3 0.883035 0.90499 0.993138);
			--color-secondary: color(display-p3 0.880667 0.26782 0.587861);
			--color-secondary-content: color(display-p3 0.964052 0.897855 0.939789);
			--color-accent: color(display-p3 0.312493 0.813034 0.735662);
			--color-accent-content: color(display-p3 0.128725 0.296875 0.284306);
			--color-neutral: color(display-p3 0.0346186 0.034606 0.0427327);
			--color-neutral-content: color(display-p3 0.894477 0.894477 0.905114);
			--color-info: color(display-p3 0.297526 0.717371 0.972161);
			--color-info-content: color(display-p3 0.0695709 0.177759 0.278667);
			--color-success: color(display-p3 0.32762 0.813141 0.585553);
			--color-success-content: color(display-p3 0.108674 0.294366 0.226358);
			--color-warning: color(display-p3 0.94863 0.728271 0.0946339);
			--color-warning-content: color(display-p3 0.441203 0.212026 0.0773632);
			--color-error: color(display-p3 0.940178 0.428237 0.500757);
			--color-error-content: color(display-p3 0.274274 0.0392692 0.0981547);
		}
	}
	@supports (color: lab(0% 0 0)) {
		[data-theme='light'] {
			--color-base-100: lab(100% 0 0);
			--color-base-200: lab(97.68% -0.0000298023 0.0000119209);
			--color-base-300: lab(94.2% 0 0);
			--color-base-content: lab(8.30603% 0.618205 -2.16572);
			--color-primary: lab(31.573% 49.867 -84.7065);
			--color-primary-content: lab(91.6577% 1.04591 -12.7199);
			--color-secondary: lab(56.234% 76.7852 -8.06803);
			--color-secondary-content: lab(92.6584% 9.01151 -3.1507);
			--color-accent: lab(75.1988% -53.3697 -2.27784);
			--color-accent-content: lab(28.81% -21.4781 -3.59725);
			--color-neutral: lab(2.45787% 0.239417 -0.873864);
			--color-neutral-content: lab(90.6853% 0.399232 -1.45452);
			--color-info: lab(69.9876% -23.5256 -45.9352);
			--color-info-content: lab(17.4794% -5.25944 -21.1512);
			--color-success: lab(74.4967% -60.7579 19.4189);
			--color-success-content: lab(27.9355% -26.9592 5.46191);
			--color-warning: lab(79.2305% 16.6936 100.392);
			--color-warning-content: lab(30.7627% 30.2938 40.2828);
			--color-error: lab(64.1803% 63.0275 19.2122);
			--color-error-content: lab(14.1162% 34.0067 9.81536);
		}
	}
	:root:has(input.theme-controller[value='light']:checked) {
		--lightningcss-light: initial;
		--lightningcss-dark: ;
		color-scheme: light;
		--color-base-100: #fff;
		--color-base-200: #f8f8f8;
		--color-base-300: #eee;
		--color-base-content: #18181b;
		--color-primary: #422ad5;
		--color-primary-content: #e0e7ff;
		--color-secondary: #f43098;
		--color-secondary-content: #f9e4f0;
		--color-accent: #00d1bb;
		--color-accent-content: #084d49;
		--color-neutral: #09090b;
		--color-neutral-content: #e4e4e7;
		--color-info: #00bafc;
		--color-info-content: #042e49;
		--color-success: #00d193;
		--color-success-content: #004c39;
		--color-warning: #f9b800;
		--color-warning-content: #793205;
		--color-error: #ff657f;
		--color-error-content: #4d0218;
		--radius-selector: 0.5rem;
		--radius-field: 0.25rem;
		--radius-box: 0.5rem;
		--size-selector: 0.25rem;
		--size-field: 0.25rem;
		--border: 1px;
		--depth: 1;
		--noise: 0;
	}
	@supports (color: color(display-p3 0 0 0)) {
		:root:has(input.theme-controller[value='light']:checked) {
			--color-base-100: color(display-p3 1 1 1);
			--color-base-200: color(display-p3 0.973691 0.973691 0.973691);
			--color-base-300: color(display-p3 0.93448 0.93448 0.93448);
			--color-base-content: color(display-p3 0.0937957 0.093793 0.104806);
			--color-primary: color(display-p3 0.244907 0.16847 0.802628);
			--color-primary-content: color(display-p3 0.883035 0.90499 0.993138);
			--color-secondary: color(display-p3 0.880667 0.26782 0.587861);
			--color-secondary-content: color(display-p3 0.964052 0.897855 0.939789);
			--color-accent: color(display-p3 0.312493 0.813034 0.735662);
			--color-accent-content: color(display-p3 0.128725 0.296875 0.284306);
			--color-neutral: color(display-p3 0.0346186 0.034606 0.0427327);
			--color-neutral-content: color(display-p3 0.894477 0.894477 0.905114);
			--color-info: color(display-p3 0.297526 0.717371 0.972161);
			--color-info-content: color(display-p3 0.0695709 0.177759 0.278667);
			--color-success: color(display-p3 0.32762 0.813141 0.585553);
			--color-success-content: color(display-p3 0.108674 0.294366 0.226358);
			--color-warning: color(display-p3 0.94863 0.728271 0.0946339);
			--color-warning-content: color(display-p3 0.441203 0.212026 0.0773632);
			--color-error: color(display-p3 0.940178 0.428237 0.500757);
			--color-error-content: color(display-p3 0.274274 0.0392692 0.0981547);
		}
	}
	@supports (color: lab(0% 0 0)) {
		:root:has(input.theme-controller[value='light']:checked) {
			--color-base-100: lab(100% 0 0);
			--color-base-200: lab(97.68% -0.0000298023 0.0000119209);
			--color-base-300: lab(94.2% 0 0);
			--color-base-content: lab(8.30603% 0.618205 -2.16572);
			--color-primary: lab(31.573% 49.867 -84.7065);
			--color-primary-content: lab(91.6577% 1.04591 -12.7199);
			--color-secondary: lab(56.234% 76.7852 -8.06803);
			--color-secondary-content: lab(92.6584% 9.01151 -3.1507);
			--color-accent: lab(75.1988% -53.3697 -2.27784);
			--color-accent-content: lab(28.81% -21.4781 -3.59725);
			--color-neutral: lab(2.45787% 0.239417 -0.873864);
			--color-neutral-content: lab(90.6853% 0.399232 -1.45452);
			--color-info: lab(69.9876% -23.5256 -45.9352);
			--color-info-content: lab(17.4794% -5.25944 -21.1512);
			--color-success: lab(74.4967% -60.7579 19.4189);
			--color-success-content: lab(27.9355% -26.9592 5.46191);
			--color-warning: lab(79.2305% 16.6936 100.392);
			--color-warning-content: lab(30.7627% 30.2938 40.2828);
			--color-error: lab(64.1803% 63.0275 19.2122);
			--color-error-content: lab(14.1162% 34.0067 9.81536);
		}
	}
	[data-theme='black'] {
		--lightningcss-light: ;
		--lightningcss-dark: initial;
		color-scheme: dark;
		--color-base-100: #000;
		--color-base-200: #141414;
		--color-base-300: #1b1b1b;
		--color-base-content: #d6d6d6;
		--color-primary: #3a3a3a;
		--color-primary-content: #fff;
		--color-secondary: #3a3a3a;
		--color-secondary-content: #fff;
		--color-accent: #3a3a3a;
		--color-accent-content: #fff;
		--color-neutral: #3a3a3a;
		--color-neutral-content: #fff;
		--color-info: #002cea;
		--color-info-content: #c9dbff;
		--color-success: #028002;
		--color-success-content: #d3e6d0;
		--color-warning: #ff0;
		--color-warning-content: #161600;
		--color-error: #ff0301;
		--color-error-content: #160000;
		--radius-selector: 0rem;
		--radius-field: 0rem;
		--radius-box: 0rem;
		--size-selector: 0.25rem;
		--size-field: 0.25rem;
		--border: 1px;
		--depth: 0;
		--noise: 0;
	}
	@supports (color: color(display-p3 0 0 0)) {
		[data-theme='black'] {
			--color-base-100: color(display-p3 0 0 0);
			--color-base-200: color(display-p3 0.077341 0.077341 0.077341);
			--color-base-300: color(display-p3 0.103957 0.103957 0.103957);
			--color-base-content: color(display-p3 0.839207 0.839207 0.839208);
			--color-primary: color(display-p3 0.229013 0.229013 0.229013);
			--color-primary-content: color(display-p3 1 1 1);
			--color-secondary: color(display-p3 0.229013 0.229013 0.229013);
			--color-secondary-content: color(display-p3 1 1 1);
			--color-accent: color(display-p3 0.229013 0.229013 0.229013);
			--color-accent-content: color(display-p3 1 1 1);
			--color-neutral: color(display-p3 0.229013 0.229013 0.229013);
			--color-neutral-content: color(display-p3 1 1 1);
			--color-info: color(display-p3 0.00020985 0.00186519 0.95915);
			--color-info-content: color(display-p3 0.793058 0.857417 1.00923);
			--color-success: color(display-p3 0.217389 0.493859 0.133731);
			--color-success-content: color(display-p3 0.839771 0.898373 0.824121);
			--color-warning: color(display-p3 0.999997 0.999995 0.330921);
			--color-warning-content: color(display-p3 0.0860667 0.0860859 0.00953524);
			--color-error: color(display-p3 0.916609 0.202449 0.140493);
			--color-error-content: color(display-p3 0.0746094 0.00370725 0.00193291);
		}
	}
	@supports (color: lab(0% 0 0)) {
		[data-theme='black'] {
			--color-base-100: lab(0% 0 0);
			--color-base-200: lab(6.19571% 0 0);
			--color-base-300: lab(9.52% -0.00000745058 0);
			--color-base-content: lab(85.6264% -0.0000298023 0.0000119209);
			--color-primary: lab(24.6% 0 0);
			--color-primary-content: lab(100% 0 0);
			--color-secondary: lab(24.6% 0 0);
			--color-secondary-content: lab(100% 0 0);
			--color-accent: lab(24.6% 0 0);
			--color-accent-content: lab(100% 0 0);
			--color-neutral: lab(24.6% 0 0);
			--color-neutral-content: lab(100% 0 0);
			--color-info: lab(29.5786% 68.1828 -111.947);
			--color-info-content: lab(86.9649% -0.614971 -22.8506);
			--color-success: lab(46.2693% -47.3199 48.2556);
			--color-success-content: lab(89.311% -9.46093 8.0988);
			--color-warning: lab(97.6067% -15.7493 93.39);
			--color-warning-content: lab(6.78697% -2.72717 9.99282);
			--color-error: lab(54.2976% 80.5821 69.4726);
			--color-error-content: lab(1.60986% 7.06433 2.5444);
		}
	}
	:root:has(input.theme-controller[value='black']:checked) {
		--lightningcss-light: ;
		--lightningcss-dark: initial;
		color-scheme: dark;
		--color-base-100: #000;
		--color-base-200: #141414;
		--color-base-300: #1b1b1b;
		--color-base-content: #d6d6d6;
		--color-primary: #3a3a3a;
		--color-primary-content: #fff;
		--color-secondary: #3a3a3a;
		--color-secondary-content: #fff;
		--color-accent: #3a3a3a;
		--color-accent-content: #fff;
		--color-neutral: #3a3a3a;
		--color-neutral-content: #fff;
		--color-info: #002cea;
		--color-info-content: #c9dbff;
		--color-success: #028002;
		--color-success-content: #d3e6d0;
		--color-warning: #ff0;
		--color-warning-content: #161600;
		--color-error: #ff0301;
		--color-error-content: #160000;
		--radius-selector: 0rem;
		--radius-field: 0rem;
		--radius-box: 0rem;
		--size-selector: 0.25rem;
		--size-field: 0.25rem;
		--border: 1px;
		--depth: 0;
		--noise: 0;
	}
	@supports (color: color(display-p3 0 0 0)) {
		:root:has(input.theme-controller[value='black']:checked) {
			--color-base-100: color(display-p3 0 0 0);
			--color-base-200: color(display-p3 0.077341 0.077341 0.077341);
			--color-base-300: color(display-p3 0.103957 0.103957 0.103957);
			--color-base-content: color(display-p3 0.839207 0.839207 0.839208);
			--color-primary: color(display-p3 0.229013 0.229013 0.229013);
			--color-primary-content: color(display-p3 1 1 1);
			--color-secondary: color(display-p3 0.229013 0.229013 0.229013);
			--color-secondary-content: color(display-p3 1 1 1);
			--color-accent: color(display-p3 0.229013 0.229013 0.229013);
			--color-accent-content: color(display-p3 1 1 1);
			--color-neutral: color(display-p3 0.229013 0.229013 0.229013);
			--color-neutral-content: color(display-p3 1 1 1);
			--color-info: color(display-p3 0.00020985 0.00186519 0.95915);
			--color-info-content: color(display-p3 0.793058 0.857417 1.00923);
			--color-success: color(display-p3 0.217389 0.493859 0.133731);
			--color-success-content: color(display-p3 0.839771 0.898373 0.824121);
			--color-warning: color(display-p3 0.999997 0.999995 0.330921);
			--color-warning-content: color(display-p3 0.0860667 0.0860859 0.00953524);
			--color-error: color(display-p3 0.916609 0.202449 0.140493);
			--color-error-content: color(display-p3 0.0746094 0.00370725 0.00193291);
		}
	}
	@supports (color: lab(0% 0 0)) {
		:root:has(input.theme-controller[value='black']:checked) {
			--color-base-100: lab(0% 0 0);
			--color-base-200: lab(6.19571% 0 0);
			--color-base-300: lab(9.52% -0.00000745058 0);
			--color-base-content: lab(85.6264% -0.0000298023 0.0000119209);
			--color-primary: lab(24.6% 0 0);
			--color-primary-content: lab(100% 0 0);
			--color-secondary: lab(24.6% 0 0);
			--color-secondary-content: lab(100% 0 0);
			--color-accent: lab(24.6% 0 0);
			--color-accent-content: lab(100% 0 0);
			--color-neutral: lab(24.6% 0 0);
			--color-neutral-content: lab(100% 0 0);
			--color-info: lab(29.5786% 68.1828 -111.947);
			--color-info-content: lab(86.9649% -0.614971 -22.8506);
			--color-success: lab(46.2693% -47.3199 48.2556);
			--color-success-content: lab(89.311% -9.46093 8.0988);
			--color-warning: lab(97.6067% -15.7493 93.39);
			--color-warning-content: lab(6.78697% -2.72717 9.99282);
			--color-error: lab(54.2976% 80.5821 69.4726);
			--color-error-content: lab(1.60986% 7.06433 2.5444);
		}
	}
	:root {
		--fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 200 200'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='200' height='200' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
		scrollbar-color: currentColor transparent;
	}
	@supports (color: color-mix(in lab, red, red)) {
		:root {
			scrollbar-color: color-mix(in oklch, currentColor 35%, transparent)
				transparent;
		}
	}
	@property --radialprogress {
		syntax: '<percentage>';
		inherits: true;
		initial-value: 0%;
	}
	:root:has(
		.modal-open,
		.modal[open],
		.modal:target,
		.modal-toggle:checked,
		.drawer:not([class*='drawer-open']) > .drawer-toggle:checked
	) {
		overflow: hidden;
	}
	:where(
		:root:has(
			.modal-open,
			.modal[open],
			.modal:target,
			.modal-toggle:checked,
			.drawer:not(.drawer-open) > .drawer-toggle:checked
		)
	) {
		scrollbar-gutter: stable;
		background-image: linear-gradient(
			var(--color-base-100),
			var(--color-base-100)
		);
		--root-bg: var(--color-base-100);
	}
	@supports (color: color-mix(in lab, red, red)) {
		:where(
			:root:has(
				.modal-open,
				.modal[open],
				.modal:target,
				.modal-toggle:checked,
				.drawer:not(.drawer-open) > .drawer-toggle:checked
			)
		) {
			--root-bg: color-mix(in srgb, var(--color-base-100), lab(0% 0 0) 40%);
		}
	}
	:where(.modal[open], .modal-open, .modal-toggle:checked + .modal):not(
		:-webkit-any(.modal-start, .modal-end)
	) {
		scrollbar-gutter: stable;
	}
	:where(.modal[open], .modal-open, .modal-toggle:checked + .modal):not(
		:-moz-any(.modal-start, .modal-end)
	) {
		scrollbar-gutter: stable;
	}
	:where(.modal[open], .modal-open, .modal-toggle:checked + .modal):not(
		:is(.modal-start, .modal-end)
	) {
		scrollbar-gutter: stable;
	}
	@supports (width: if(else: 1px)) and (animation-timeline: scroll()) {
		:root {
			animation: forwards set-page-has-scroll;
			animation-timeline: scroll();
		}
		@keyframes set-page-has-scroll {
			0%,
			to {
				--page-has-scroll: 1;
			}
		}
		:where(
			:root:has(
				.modal-open,
				.modal[open],
				.modal:target,
				.modal-toggle:checked,
				.drawer:not(.drawer-open) > .drawer-toggle:checked
			)
		) {
			scrollbar-gutter: if(style(--page-has-scroll: 1): stable; else: unset);
		}
	}
	:root,
	[data-theme] {
		background-color: var(--root-bg, var(--color-base-100));
		color: var(--color-base-content);
	}
}
@layer components;
@layer utilities {
	:where(.btn) {
		width: unset;
	}
	.btn {
		cursor: pointer;
		text-align: center;
		vertical-align: middle;
		outline-offset: 2px;
		webkit-user-select: none;
		-webkit-user-select: none;
		-moz-user-select: none;
		user-select: none;
		padding-inline: var(--btn-p);
		color: var(--btn-fg);
		--tw-prose-links: var(--btn-fg);
		height: var(--size);
		font-size: var(--fontsize, 0.875rem);
		outline-color: var(--btn-color, var(--color-base-content));
		background-color: var(--btn-bg);
		background-size: auto, calc(var(--noise) * 100%);
		background-image: none, var(--btn-noise);
		border-width: var(--border);
		border-style: solid;
		border-color: var(--btn-border);
		text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
		touch-action: manipulation;
		box-shadow:
			0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset,
			var(--btn-shadow);
		--size: calc(var(--size-field, 0.25rem) * 10);
		--btn-bg: var(--btn-color, var(--color-base-200));
		--btn-fg: var(--color-base-content);
		--btn-p: 1rem;
		--btn-border: var(--btn-bg);
		flex-wrap: nowrap;
		flex-shrink: 0;
		justify-content: center;
		align-items: center;
		gap: 0.375rem;
		font-weight: 600;
		transition-property: color, background-color, border-color, box-shadow;
		transition-duration: 0.2s;
		transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
		display: inline-flex;
	}
	.btn:not(
		:-webkit-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)
	) {
		border-top-left-radius: var(--join-ss, var(--radius-field));
		border-top-right-radius: var(--join-se, var(--radius-field));
		border-bottom-right-radius: var(--join-ee, var(--radius-field));
		border-bottom-left-radius: var(--join-es, var(--radius-field));
	}
	.btn:not(
		:-moz-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)
	) {
		border-top-left-radius: var(--join-ss, var(--radius-field));
		border-top-right-radius: var(--join-se, var(--radius-field));
		border-bottom-right-radius: var(--join-ee, var(--radius-field));
		border-bottom-left-radius: var(--join-es, var(--radius-field));
	}
	.btn:not(
		:is(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)
	) {
		border-top-left-radius: var(--join-ss, var(--radius-field));
		border-top-right-radius: var(--join-se, var(--radius-field));
		border-bottom-right-radius: var(--join-ee, var(--radius-field));
		border-bottom-left-radius: var(--join-es, var(--radius-field));
	}
	.btn:-webkit-any(
		:lang(ae),
		:lang(ar),
		:lang(arc),
		:lang(bcc),
		:lang(bqi),
		:lang(ckb),
		:lang(dv),
		:lang(fa),
		:lang(glk),
		:lang(he),
		:lang(ku),
		:lang(mzn),
		:lang(nqo),
		:lang(pnb),
		:lang(ps),
		:lang(sd),
		:lang(ug),
		:lang(ur),
		:lang(yi)
	) {
		border-top-right-radius: var(--join-ss, var(--radius-field));
		border-top-left-radius: var(--join-se, var(--radius-field));
		border-bottom-left-radius: var(--join-ee, var(--radius-field));
		border-bottom-right-radius: var(--join-es, var(--radius-field));
	}
	.btn:-moz-any(
		:lang(ae),
		:lang(ar),
		:lang(arc),
		:lang(bcc),
		:lang(bqi),
		:lang(ckb),
		:lang(dv),
		:lang(fa),
		:lang(glk),
		:lang(he),
		:lang(ku),
		:lang(mzn),
		:lang(nqo),
		:lang(pnb),
		:lang(ps),
		:lang(sd),
		:lang(ug),
		:lang(ur),
		:lang(yi)
	) {
		border-top-right-radius: var(--join-ss, var(--radius-field));
		border-top-left-radius: var(--join-se, var(--radius-field));
		border-bottom-left-radius: var(--join-ee, var(--radius-field));
		border-bottom-right-radius: var(--join-es, var(--radius-field));
	}
	.btn:is(
		:lang(ae),
		:lang(ar),
		:lang(arc),
		:lang(bcc),
		:lang(bqi),
		:lang(ckb),
		:lang(dv),
		:lang(fa),
		:lang(glk),
		:lang(he),
		:lang(ku),
		:lang(mzn),
		:lang(nqo),
		:lang(pnb),
		:lang(ps),
		:lang(sd),
		:lang(ug),
		:lang(ur),
		:lang(yi)
	) {
		border-top-right-radius: var(--join-ss, var(--radius-field));
		border-top-left-radius: var(--join-se, var(--radius-field));
		border-bottom-left-radius: var(--join-ee, var(--radius-field));
		border-bottom-right-radius: var(--join-es, var(--radius-field));
	}
	@supports (color: color-mix(in lab, red, red)) {
		.btn {
			--btn-border: color-mix(
				in oklab,
				var(--btn-bg),
				#000 calc(var(--depth) * 5%)
			);
		}
	}
	.btn {
		--btn-shadow: 0 3px 2px -2px var(--btn-bg), 0 4px 3px -2px var(--btn-bg);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.btn {
			--btn-shadow:
				0 3px 2px -2px
					color-mix(
						in oklab,
						var(--btn-bg) calc(var(--depth) * 30%),
						transparent
					),
				0 4px 3px -2px
					color-mix(
						in oklab,
						var(--btn-bg) calc(var(--depth) * 30%),
						transparent
					);
		}
	}
	.btn {
		--btn-noise: var(--fx-noise);
	}
	.prose .btn {
		-webkit-text-decoration-line: none;
		text-decoration-line: none;
	}
	@media (hover: hover) {
		.btn:hover {
			--btn-bg: var(--btn-color, var(--color-base-200));
		}
		@supports (color: color-mix(in lab, red, red)) {
			.btn:hover {
				--btn-bg: color-mix(
					in oklab,
					var(--btn-color, var(--color-base-200)),
					#000 7%
				);
			}
		}
	}
	.btn:focus-visible {
		isolation: isolate;
		outline-width: 2px;
		outline-style: solid;
	}
	.btn:has(:focus-visible) {
		isolation: isolate;
		outline-width: 2px;
		outline-style: solid;
	}
	.btn:active:not(.btn-active) {
		--btn-bg: var(--btn-color, var(--color-base-200));
		translate: 0 0.5px;
	}
	@supports (color: color-mix(in lab, red, red)) {
		.btn:active:not(.btn-active) {
			--btn-bg: color-mix(
				in oklab,
				var(--btn-color, var(--color-base-200)),
				#000 5%
			);
		}
	}
	.btn:active:not(.btn-active) {
		--btn-border: var(--btn-color, var(--color-base-200));
	}
	@supports (color: color-mix(in lab, red, red)) {
		.btn:active:not(.btn-active) {
			--btn-border: color-mix(
				in oklab,
				var(--btn-color, var(--color-base-200)),
				#000 7%
			);
		}
	}
	.btn:active:not(.btn-active) {
		--btn-shadow: 0 0 0 0 transparent, 0 0 0 0 transparent;
	}
	@supports (color: color(display-p3 0 0 0)) {
		.btn:active:not(.btn-active) {
			--btn-shadow:
				0 0 0 0 color(display-p3 0 0 0/0), 0 0 0 0 color(display-p3 0 0 0/0);
		}
	}
	@supports (color: lab(0% 0 0)) {
		.btn:active:not(.btn-active) {
			--btn-shadow: 0 0 0 0 lab(0% 0 0/0), 0 0 0 0 lab(0% 0 0/0);
		}
	}
	.btn:-webkit-any(:disabled, [disabled], .btn-disabled):not(
			:-webkit-any(.btn-link, .btn-ghost)
		) {
		background-color: var(--color-base-content);
	}
	.btn:-moz-any(:disabled, [disabled], .btn-disabled):not(
			:-moz-any(.btn-link, .btn-ghost)
		) {
		background-color: var(--color-base-content);
	}
	.btn:is(:disabled, [disabled], .btn-disabled):not(
			:is(.btn-link, .btn-ghost)
		) {
		background-color: var(--color-base-content);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.btn:-webkit-any(:disabled, [disabled], .btn-disabled):not(
				:-webkit-any(.btn-link, .btn-ghost)
			) {
			background-color: color-mix(
				in oklab,
				var(--color-base-content) 10%,
				transparent
			);
		}
		.btn:-moz-any(:disabled, [disabled], .btn-disabled):not(
				:-moz-any(.btn-link, .btn-ghost)
			) {
			background-color: color-mix(
				in oklab,
				var(--color-base-content) 10%,
				transparent
			);
		}
		.btn:is(:disabled, [disabled], .btn-disabled):not(
				:is(.btn-link, .btn-ghost)
			) {
			background-color: color-mix(
				in oklab,
				var(--color-base-content) 10%,
				transparent
			);
		}
	}
	.btn:-webkit-any(:disabled, [disabled], .btn-disabled):not(
			:-webkit-any(.btn-link, .btn-ghost)
		) {
		box-shadow: none;
	}
	.btn:-moz-any(:disabled, [disabled], .btn-disabled):not(
			:-moz-any(.btn-link, .btn-ghost)
		) {
		box-shadow: none;
	}
	.btn:is(:disabled, [disabled], .btn-disabled):not(
			:is(.btn-link, .btn-ghost)
		) {
		box-shadow: none;
	}
	.btn:-webkit-any(:disabled, [disabled], .btn-disabled) {
		pointer-events: none;
		--btn-border: transparent;
		--btn-noise: none;
		--btn-fg: var(--color-base-content);
	}
	.btn:-moz-any(:disabled, [disabled], .btn-disabled) {
		pointer-events: none;
		--btn-border: transparent;
		--btn-noise: none;
		--btn-fg: var(--color-base-content);
	}
	.btn:is(:disabled, [disabled], .btn-disabled) {
		pointer-events: none;
		--btn-border: transparent;
		--btn-noise: none;
		--btn-fg: var(--color-base-content);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.btn:-webkit-any(:disabled, [disabled], .btn-disabled) {
			--btn-fg: color-mix(in oklch, var(--color-base-content) 20%, transparent);
		}
		.btn:-moz-any(:disabled, [disabled], .btn-disabled) {
			--btn-fg: color-mix(in oklch, var(--color-base-content) 20%, transparent);
		}
		.btn:is(:disabled, [disabled], .btn-disabled) {
			--btn-fg: color-mix(in oklch, var(--color-base-content) 20%, transparent);
		}
	}
	@media (hover: hover) {
		.btn:-webkit-any(:disabled, [disabled], .btn-disabled):hover {
			pointer-events: none;
			background-color: var(--color-neutral);
		}
		.btn:-moz-any(:disabled, [disabled], .btn-disabled):hover {
			pointer-events: none;
			background-color: var(--color-neutral);
		}
		.btn:is(:disabled, [disabled], .btn-disabled):hover {
			pointer-events: none;
			background-color: var(--color-neutral);
		}
		@supports (color: color-mix(in lab, red, red)) {
			.btn:-webkit-any(:disabled, [disabled], .btn-disabled):hover {
				background-color: color-mix(
					in oklab,
					var(--color-neutral) 20%,
					transparent
				);
			}
			.btn:-moz-any(:disabled, [disabled], .btn-disabled):hover {
				background-color: color-mix(
					in oklab,
					var(--color-neutral) 20%,
					transparent
				);
			}
			.btn:is(:disabled, [disabled], .btn-disabled):hover {
				background-color: color-mix(
					in oklab,
					var(--color-neutral) 20%,
					transparent
				);
			}
		}
		.btn:-webkit-any(:disabled, [disabled], .btn-disabled):hover {
			--btn-border: transparent;
			--btn-fg: var(--color-base-content);
		}
		.btn:-moz-any(:disabled, [disabled], .btn-disabled):hover {
			--btn-border: transparent;
			--btn-fg: var(--color-base-content);
		}
		.btn:is(:disabled, [disabled], .btn-disabled):hover {
			--btn-border: transparent;
			--btn-fg: var(--color-base-content);
		}
		@supports (color: color-mix(in lab, red, red)) {
			.btn:-webkit-any(:disabled, [disabled], .btn-disabled):hover {
				--btn-fg: color-mix(
					in oklch,
					var(--color-base-content) 20%,
					transparent
				);
			}
			.btn:-moz-any(:disabled, [disabled], .btn-disabled):hover {
				--btn-fg: color-mix(
					in oklch,
					var(--color-base-content) 20%,
					transparent
				);
			}
			.btn:is(:disabled, [disabled], .btn-disabled):hover {
				--btn-fg: color-mix(
					in oklch,
					var(--color-base-content) 20%,
					transparent
				);
			}
		}
	}
	.btn:-webkit-any(input[type='checkbox'], input[type='radio']) {
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
	}
	.btn:-moz-any(input[type='checkbox'], input[type='radio']) {
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
	}
	.btn:is(input[type='checkbox'], input[type='radio']) {
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
	}
	.btn:-webkit-any(input[type='checkbox'], input[type='radio']):after {
		content: attr(aria-label);
	}
	.btn:-moz-any(input[type='checkbox'], input[type='radio']):after {
		content: attr(aria-label);
	}
	.btn:is(input[type='checkbox'], input[type='radio']):after {
		content: attr(aria-label);
	}
	.btn:where(input:checked:not(.filter .btn)) {
		--btn-color: var(--color-primary);
		--btn-fg: var(--color-primary-content);
		isolation: isolate;
	}
	.loading {
		pointer-events: none;
		aspect-ratio: 1;
		vertical-align: middle;
		width: calc(var(--size-selector, 0.25rem) * 6);
		background-color: currentColor;
		display: inline-block;
		-webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
		mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
		-webkit-mask-position: 50%;
		mask-position: 50%;
		-webkit-mask-size: 100%;
		mask-size: 100%;
		-webkit-mask-repeat: no-repeat;
		mask-repeat: no-repeat;
	}
	.list {
		flex-direction: column;
		font-size: 0.875rem;
		display: flex;
	}
	.list :where(.list-row) {
		--list-grid-cols: minmax(0, auto) 1fr;
		border-radius: var(--radius-box);
		word-break: break-word;
		grid-auto-flow: column;
		grid-template-columns: var(--list-grid-cols);
		gap: 1rem;
		padding: 1rem;
		display: grid;
		position: relative;
	}
	.list :where(.list-row):has(.list-col-grow:first-child) {
		--list-grid-cols: 1fr;
	}
	.list :where(.list-row):has(.list-col-grow:nth-child(2)) {
		--list-grid-cols: minmax(0, auto) 1fr;
	}
	.list :where(.list-row):has(.list-col-grow:nth-child(3)) {
		--list-grid-cols: minmax(0, auto) minmax(0, auto) 1fr;
	}
	.list :where(.list-row):has(.list-col-grow:nth-child(4)) {
		--list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
	}
	.list :where(.list-row):has(.list-col-grow:nth-child(5)) {
		--list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto)
			minmax(0, auto) 1fr;
	}
	.list :where(.list-row):has(.list-col-grow:nth-child(6)) {
		--list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto)
			minmax(0, auto) minmax(0, auto) 1fr;
	}
	.list :where(.list-row) :not(.list-col-wrap) {
		grid-row-start: 1;
	}
	:is(
		.list > :not(:last-child).list-row,
		.list > :not(:last-child) .list-row
	):after {
		content: '';
		border-bottom: var(--border) solid;
		inset-inline: var(--radius-box);
		border-color: var(--color-base-content);
		position: absolute;
		bottom: 0;
	}
	@supports (color: color-mix(in lab, red, red)) {
		:is(
			.list > :not(:last-child).list-row,
			.list > :not(:last-child) .list-row
		):after {
			border-color: color-mix(
				in oklab,
				var(--color-base-content) 5%,
				transparent
			);
		}
	}
	.input {
		cursor: text;
		border: var(--border) solid transparent;
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
		background-color: var(--color-base-100);
		vertical-align: middle;
		white-space: nowrap;
		width: max(3rem, min(20rem, 100%));
		height: var(--size);
		font-size: max(var(--font-size, 0.875rem), 0.875rem);
		touch-action: manipulation;
		border-color: var(--input-color);
		box-shadow:
			0 1px var(--input-color) inset,
			0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
		flex-shrink: 1;
		align-items: center;
		gap: 0.5rem;
		padding-left: 0.75rem;
		padding-right: 0.75rem;
		display: inline-flex;
		position: relative;
	}
	.input:not(
		:-webkit-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)
	) {
		border-top-left-radius: var(--join-ss, var(--radius-field));
		border-top-right-radius: var(--join-se, var(--radius-field));
		border-bottom-right-radius: var(--join-ee, var(--radius-field));
		border-bottom-left-radius: var(--join-es, var(--radius-field));
	}
	.input:not(
		:-moz-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)
	) {
		border-top-left-radius: var(--join-ss, var(--radius-field));
		border-top-right-radius: var(--join-se, var(--radius-field));
		border-bottom-right-radius: var(--join-ee, var(--radius-field));
		border-bottom-left-radius: var(--join-es, var(--radius-field));
	}
	.input:not(
		:is(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)
	) {
		border-top-left-radius: var(--join-ss, var(--radius-field));
		border-top-right-radius: var(--join-se, var(--radius-field));
		border-bottom-right-radius: var(--join-ee, var(--radius-field));
		border-bottom-left-radius: var(--join-es, var(--radius-field));
	}
	.input:-webkit-any(
		:lang(ae),
		:lang(ar),
		:lang(arc),
		:lang(bcc),
		:lang(bqi),
		:lang(ckb),
		:lang(dv),
		:lang(fa),
		:lang(glk),
		:lang(he),
		:lang(ku),
		:lang(mzn),
		:lang(nqo),
		:lang(pnb),
		:lang(ps),
		:lang(sd),
		:lang(ug),
		:lang(ur),
		:lang(yi)
	) {
		border-top-right-radius: var(--join-ss, var(--radius-field));
		border-top-left-radius: var(--join-se, var(--radius-field));
		border-bottom-left-radius: var(--join-ee, var(--radius-field));
		border-bottom-right-radius: var(--join-es, var(--radius-field));
	}
	.input:-moz-any(
		:lang(ae),
		:lang(ar),
		:lang(arc),
		:lang(bcc),
		:lang(bqi),
		:lang(ckb),
		:lang(dv),
		:lang(fa),
		:lang(glk),
		:lang(he),
		:lang(ku),
		:lang(mzn),
		:lang(nqo),
		:lang(pnb),
		:lang(ps),
		:lang(sd),
		:lang(ug),
		:lang(ur),
		:lang(yi)
	) {
		border-top-right-radius: var(--join-ss, var(--radius-field));
		border-top-left-radius: var(--join-se, var(--radius-field));
		border-bottom-left-radius: var(--join-ee, var(--radius-field));
		border-bottom-right-radius: var(--join-es, var(--radius-field));
	}
	.input:is(
		:lang(ae),
		:lang(ar),
		:lang(arc),
		:lang(bcc),
		:lang(bqi),
		:lang(ckb),
		:lang(dv),
		:lang(fa),
		:lang(glk),
		:lang(he),
		:lang(ku),
		:lang(mzn),
		:lang(nqo),
		:lang(pnb),
		:lang(ps),
		:lang(sd),
		:lang(ug),
		:lang(ur),
		:lang(yi)
	) {
		border-top-right-radius: var(--join-ss, var(--radius-field));
		border-top-left-radius: var(--join-se, var(--radius-field));
		border-bottom-left-radius: var(--join-ee, var(--radius-field));
		border-bottom-right-radius: var(--join-es, var(--radius-field));
	}
	@supports (color: color-mix(in lab, red, red)) {
		.input {
			box-shadow:
				0 1px
					color-mix(
						in oklab,
						var(--input-color) calc(var(--depth) * 10%),
						transparent
					)
					inset,
				0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
		}
	}
	.input {
		--size: calc(var(--size-field, 0.25rem) * 10);
		--input-color: var(--color-base-content);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.input {
			--input-color: color-mix(
				in oklab,
				var(--color-base-content) 20%,
				transparent
			);
		}
	}
	.input:where(input) {
		display: inline-flex;
	}
	.input :where(input) {
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
		background-color: transparent;
		border: none;
		width: 100%;
		height: 100%;
		display: inline-flex;
	}
	.input :where(input):focus {
		--tw-outline-style: none;
		outline-style: none;
	}
	.input :where(input):focus-within {
		--tw-outline-style: none;
		outline-style: none;
	}
	@media (forced-colors: active) {
		.input :where(input):focus {
			outline-offset: 2px;
			outline: 2px solid transparent;
		}
		.input :where(input):focus-within {
			outline-offset: 2px;
			outline: 2px solid transparent;
		}
	}
	.input :where(input[type='url']) {
		direction: ltr;
	}
	.input :where(input[type='email']) {
		direction: ltr;
	}
	.input :where(input[type='date']) {
		display: inline-flex;
	}
	.input:focus,
	.input:focus-within {
		--input-color: var(--color-base-content);
		box-shadow: 0 1px var(--input-color);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.input:focus,
		.input:focus-within {
			box-shadow: 0 1px
				color-mix(
					in oklab,
					var(--input-color) calc(var(--depth) * 10%),
					transparent
				);
		}
	}
	.input:focus,
	.input:focus-within {
		outline: 2px solid var(--input-color);
		outline-offset: 2px;
		isolation: isolate;
		z-index: 1;
	}
	@media (pointer: coarse) {
		@supports (-webkit-touch-callout: none) {
			.input:focus,
			.input:focus-within {
				--font-size: 1rem;
			}
		}
	}
	fieldset:disabled .input {
		cursor: not-allowed;
		border-color: var(--color-base-200);
		background-color: var(--color-base-200);
		color: var(--color-base-content);
	}
	.input:has(> input[disabled]) {
		cursor: not-allowed;
		border-color: var(--color-base-200);
		background-color: var(--color-base-200);
		color: var(--color-base-content);
	}
	.input:-webkit-any(:disabled, [disabled]) {
		cursor: not-allowed;
		border-color: var(--color-base-200);
		background-color: var(--color-base-200);
		color: var(--color-base-content);
	}
	.input:-moz-any(:disabled, [disabled]) {
		cursor: not-allowed;
		border-color: var(--color-base-200);
		background-color: var(--color-base-200);
		color: var(--color-base-content);
	}
	.input:is(:disabled, [disabled]) {
		cursor: not-allowed;
		border-color: var(--color-base-200);
		background-color: var(--color-base-200);
		color: var(--color-base-content);
	}
	@supports (color: color-mix(in lab, red, red)) {
		fieldset:disabled .input {
			color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
		}
		.input:has(> input[disabled]) {
			color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
		}
		.input:-webkit-any(:disabled, [disabled]) {
			color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
		}
		.input:-moz-any(:disabled, [disabled]) {
			color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
		}
		.input:is(:disabled, [disabled]) {
			color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
		}
	}
	:-webkit-any(
		.input:has(> input[disabled]),
		.input:-webkit-any(:disabled, [disabled]),
		fieldset:disabled .input
	)::placeholder {
		color: var(--color-base-content);
	}
	:-moz-any(
		.input:has(> input[disabled]),
		.input:-moz-any(:disabled, [disabled]),
		fieldset:disabled .input
	)::placeholder {
		color: var(--color-base-content);
	}
	:is(
		.input:has(> input[disabled]),
		.input:is(:disabled, [disabled]),
		fieldset:disabled .input
	)::placeholder {
		color: var(--color-base-content);
	}
	@supports (color: color-mix(in lab, red, red)) {
		:-webkit-any(
			.input:has(> input[disabled]),
			.input:-webkit-any(:disabled, [disabled]),
			fieldset:disabled .input
		)::placeholder {
			color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
		}
		:-moz-any(
			.input:has(> input[disabled]),
			.input:-moz-any(:disabled, [disabled]),
			fieldset:disabled .input
		)::placeholder {
			color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
		}
		:is(
			.input:has(> input[disabled]),
			.input:is(:disabled, [disabled]),
			fieldset:disabled .input
		)::placeholder {
			color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
		}
	}
	fieldset:disabled .input {
		box-shadow: none;
	}
	.input:has(> input[disabled]) {
		box-shadow: none;
	}
	.input:-webkit-any(:disabled, [disabled]) {
		box-shadow: none;
	}
	.input:-moz-any(:disabled, [disabled]) {
		box-shadow: none;
	}
	.input:is(:disabled, [disabled]) {
		box-shadow: none;
	}
	.input:has(> input[disabled]) > input[disabled] {
		cursor: not-allowed;
	}
	.input::-webkit-date-and-time-value {
		text-align: inherit;
	}
	.input[type='number']::-webkit-inner-spin-button {
		margin-top: -0.75rem;
		margin-bottom: -0.75rem;
	}
	.input[type='number']:not(
			:-webkit-any(
				:lang(ae),
				:lang(ar),
				:lang(arc),
				:lang(bcc),
				:lang(bqi),
				:lang(ckb),
				:lang(dv),
				:lang(fa),
				:lang(glk),
				:lang(he),
				:lang(ku),
				:lang(mzn),
				:lang(nqo),
				:lang(pnb),
				:lang(ps),
				:lang(sd),
				:lang(ug),
				:lang(ur),
				:lang(yi)
			)
		)::-webkit-inner-spin-button {
		margin-right: -0.75rem;
	}
	.input[type='number']:not(
			:-moz-any(
				:lang(ae),
				:lang(ar),
				:lang(arc),
				:lang(bcc),
				:lang(bqi),
				:lang(ckb),
				:lang(dv),
				:lang(fa),
				:lang(glk),
				:lang(he),
				:lang(ku),
				:lang(mzn),
				:lang(nqo),
				:lang(pnb),
				:lang(ps),
				:lang(sd),
				:lang(ug),
				:lang(ur),
				:lang(yi)
			)
		)::-webkit-inner-spin-button {
		margin-right: -0.75rem;
	}
	.input[type='number']:not(
			:is(
				:lang(ae),
				:lang(ar),
				:lang(arc),
				:lang(bcc),
				:lang(bqi),
				:lang(ckb),
				:lang(dv),
				:lang(fa),
				:lang(glk),
				:lang(he),
				:lang(ku),
				:lang(mzn),
				:lang(nqo),
				:lang(pnb),
				:lang(ps),
				:lang(sd),
				:lang(ug),
				:lang(ur),
				:lang(yi)
			)
		)::-webkit-inner-spin-button {
		margin-right: -0.75rem;
	}
	.input[type='number']:-webkit-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)::-webkit-inner-spin-button {
		margin-left: -0.75rem;
	}
	.input[type='number']:-moz-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)::-webkit-inner-spin-button {
		margin-left: -0.75rem;
	}
	.input[type='number']:is(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)::-webkit-inner-spin-button {
		margin-left: -0.75rem;
	}
	.input::-webkit-calendar-picker-indicator {
		position: absolute;
	}
	.input:not(
			:-webkit-any(
				:lang(ae),
				:lang(ar),
				:lang(arc),
				:lang(bcc),
				:lang(bqi),
				:lang(ckb),
				:lang(dv),
				:lang(fa),
				:lang(glk),
				:lang(he),
				:lang(ku),
				:lang(mzn),
				:lang(nqo),
				:lang(pnb),
				:lang(ps),
				:lang(sd),
				:lang(ug),
				:lang(ur),
				:lang(yi)
			)
		)::-webkit-calendar-picker-indicator {
		right: 0.75em;
	}
	.input:not(
			:-moz-any(
				:lang(ae),
				:lang(ar),
				:lang(arc),
				:lang(bcc),
				:lang(bqi),
				:lang(ckb),
				:lang(dv),
				:lang(fa),
				:lang(glk),
				:lang(he),
				:lang(ku),
				:lang(mzn),
				:lang(nqo),
				:lang(pnb),
				:lang(ps),
				:lang(sd),
				:lang(ug),
				:lang(ur),
				:lang(yi)
			)
		)::-webkit-calendar-picker-indicator {
		right: 0.75em;
	}
	.input:not(
			:is(
				:lang(ae),
				:lang(ar),
				:lang(arc),
				:lang(bcc),
				:lang(bqi),
				:lang(ckb),
				:lang(dv),
				:lang(fa),
				:lang(glk),
				:lang(he),
				:lang(ku),
				:lang(mzn),
				:lang(nqo),
				:lang(pnb),
				:lang(ps),
				:lang(sd),
				:lang(ug),
				:lang(ur),
				:lang(yi)
			)
		)::-webkit-calendar-picker-indicator {
		right: 0.75em;
	}
	.input:-webkit-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)::-webkit-calendar-picker-indicator {
		left: 0.75em;
	}
	.input:-moz-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)::-webkit-calendar-picker-indicator {
		left: 0.75em;
	}
	.input:is(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)::-webkit-calendar-picker-indicator {
		left: 0.75em;
	}
	.input:has(> input[type='date']) :where(input[type='date']) {
		webkit-appearance: none;
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
		display: inline-flex;
	}
	.input:has(> input[type='date'])
		input[type='date']::-webkit-calendar-picker-indicator {
		cursor: pointer;
		width: 1em;
		height: 1em;
		position: absolute;
	}
	.input:has(> input[type='date'])
		input[type='date']:not(
			:-webkit-any(
				:lang(ae),
				:lang(ar),
				:lang(arc),
				:lang(bcc),
				:lang(bqi),
				:lang(ckb),
				:lang(dv),
				:lang(fa),
				:lang(glk),
				:lang(he),
				:lang(ku),
				:lang(mzn),
				:lang(nqo),
				:lang(pnb),
				:lang(ps),
				:lang(sd),
				:lang(ug),
				:lang(ur),
				:lang(yi)
			)
		)::-webkit-calendar-picker-indicator {
		right: 0.75em;
	}
	.input:has(> input[type='date'])
		input[type='date']:not(
			:-moz-any(
				:lang(ae),
				:lang(ar),
				:lang(arc),
				:lang(bcc),
				:lang(bqi),
				:lang(ckb),
				:lang(dv),
				:lang(fa),
				:lang(glk),
				:lang(he),
				:lang(ku),
				:lang(mzn),
				:lang(nqo),
				:lang(pnb),
				:lang(ps),
				:lang(sd),
				:lang(ug),
				:lang(ur),
				:lang(yi)
			)
		)::-webkit-calendar-picker-indicator {
		right: 0.75em;
	}
	.input:has(> input[type='date'])
		input[type='date']:not(
			:is(
				:lang(ae),
				:lang(ar),
				:lang(arc),
				:lang(bcc),
				:lang(bqi),
				:lang(ckb),
				:lang(dv),
				:lang(fa),
				:lang(glk),
				:lang(he),
				:lang(ku),
				:lang(mzn),
				:lang(nqo),
				:lang(pnb),
				:lang(ps),
				:lang(sd),
				:lang(ug),
				:lang(ur),
				:lang(yi)
			)
		)::-webkit-calendar-picker-indicator {
		right: 0.75em;
	}
	.input:has(> input[type='date'])
		input[type='date']:-webkit-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)::-webkit-calendar-picker-indicator {
		left: 0.75em;
	}
	.input:has(> input[type='date'])
		input[type='date']:-moz-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)::-webkit-calendar-picker-indicator {
		left: 0.75em;
	}
	.input:has(> input[type='date'])
		input[type='date']:is(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)::-webkit-calendar-picker-indicator {
		left: 0.75em;
	}
	.select {
		border: var(--border) solid transparent;
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
		background-color: var(--color-base-100);
		vertical-align: middle;
		width: max(3rem, min(20rem, 100%));
		height: var(--size);
		touch-action: manipulation;
		white-space: nowrap;
		text-overflow: ellipsis;
		box-shadow:
			0 1px var(--input-color) inset,
			0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
		background-image:
			linear-gradient(45deg, transparent 50%, currentColor 50%),
			linear-gradient(135deg, currentColor 50%, transparent 50%);
		background-position:
			calc(100% - 20px) calc(1px + 50%),
			calc(100% - 16.1px) calc(1px + 50%);
		background-repeat: no-repeat;
		background-size:
			4px 4px,
			4px 4px;
		flex-shrink: 1;
		align-items: center;
		gap: 0.375rem;
		font-size: 0.875rem;
		display: inline-flex;
		position: relative;
		overflow: hidden;
	}
	.select:not(
		:-webkit-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)
	) {
		border-top-left-radius: var(--join-ss, var(--radius-field));
		border-top-right-radius: var(--join-se, var(--radius-field));
		border-bottom-right-radius: var(--join-ee, var(--radius-field));
		border-bottom-left-radius: var(--join-es, var(--radius-field));
		padding-left: 0.75rem;
		padding-right: 1.75rem;
	}
	.select:not(
		:-moz-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)
	) {
		border-top-left-radius: var(--join-ss, var(--radius-field));
		border-top-right-radius: var(--join-se, var(--radius-field));
		border-bottom-right-radius: var(--join-ee, var(--radius-field));
		border-bottom-left-radius: var(--join-es, var(--radius-field));
		padding-left: 0.75rem;
		padding-right: 1.75rem;
	}
	.select:not(
		:is(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		)
	) {
		border-top-left-radius: var(--join-ss, var(--radius-field));
		border-top-right-radius: var(--join-se, var(--radius-field));
		border-bottom-right-radius: var(--join-ee, var(--radius-field));
		border-bottom-left-radius: var(--join-es, var(--radius-field));
		padding-left: 0.75rem;
		padding-right: 1.75rem;
	}
	.select:-webkit-any(
		:lang(ae),
		:lang(ar),
		:lang(arc),
		:lang(bcc),
		:lang(bqi),
		:lang(ckb),
		:lang(dv),
		:lang(fa),
		:lang(glk),
		:lang(he),
		:lang(ku),
		:lang(mzn),
		:lang(nqo),
		:lang(pnb),
		:lang(ps),
		:lang(sd),
		:lang(ug),
		:lang(ur),
		:lang(yi)
	) {
		border-top-right-radius: var(--join-ss, var(--radius-field));
		border-top-left-radius: var(--join-se, var(--radius-field));
		border-bottom-left-radius: var(--join-ee, var(--radius-field));
		border-bottom-right-radius: var(--join-es, var(--radius-field));
		padding-left: 1.75rem;
		padding-right: 0.75rem;
	}
	.select:-moz-any(
		:lang(ae),
		:lang(ar),
		:lang(arc),
		:lang(bcc),
		:lang(bqi),
		:lang(ckb),
		:lang(dv),
		:lang(fa),
		:lang(glk),
		:lang(he),
		:lang(ku),
		:lang(mzn),
		:lang(nqo),
		:lang(pnb),
		:lang(ps),
		:lang(sd),
		:lang(ug),
		:lang(ur),
		:lang(yi)
	) {
		border-top-right-radius: var(--join-ss, var(--radius-field));
		border-top-left-radius: var(--join-se, var(--radius-field));
		border-bottom-left-radius: var(--join-ee, var(--radius-field));
		border-bottom-right-radius: var(--join-es, var(--radius-field));
		padding-left: 1.75rem;
		padding-right: 0.75rem;
	}
	.select:is(
		:lang(ae),
		:lang(ar),
		:lang(arc),
		:lang(bcc),
		:lang(bqi),
		:lang(ckb),
		:lang(dv),
		:lang(fa),
		:lang(glk),
		:lang(he),
		:lang(ku),
		:lang(mzn),
		:lang(nqo),
		:lang(pnb),
		:lang(ps),
		:lang(sd),
		:lang(ug),
		:lang(ur),
		:lang(yi)
	) {
		border-top-right-radius: var(--join-ss, var(--radius-field));
		border-top-left-radius: var(--join-se, var(--radius-field));
		border-bottom-left-radius: var(--join-ee, var(--radius-field));
		border-bottom-right-radius: var(--join-es, var(--radius-field));
		padding-left: 1.75rem;
		padding-right: 0.75rem;
	}
	@supports (color: color-mix(in lab, red, red)) {
		.select {
			box-shadow:
				0 1px
					color-mix(
						in oklab,
						var(--input-color) calc(var(--depth) * 10%),
						transparent
					)
					inset,
				0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
		}
	}
	.select {
		border-color: var(--input-color);
		--input-color: var(--color-base-content);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.select {
			--input-color: color-mix(
				in oklab,
				var(--color-base-content) 20%,
				transparent
			);
		}
	}
	.select {
		--size: calc(var(--size-field, 0.25rem) * 10);
	}
	[dir='rtl'] .select {
		background-position:
			12px calc(1px + 50%),
			16px calc(1px + 50%);
	}
	[dir='rtl'] .select::picker(select) {
		translate: 0.5rem;
	}
	[dir='rtl'] .select select::picker(select) {
		translate: 0.5rem;
	}
	.select:where([multiple]) {
		background-image: none;
		height: auto;
		padding-top: 0.75rem;
		padding-bottom: 0.75rem;
	}
	.select:where([multiple]):not(
			:-webkit-any(
				:lang(ae),
				:lang(ar),
				:lang(arc),
				:lang(bcc),
				:lang(bqi),
				:lang(ckb),
				:lang(dv),
				:lang(fa),
				:lang(glk),
				:lang(he),
				:lang(ku),
				:lang(mzn),
				:lang(nqo),
				:lang(pnb),
				:lang(ps),
				:lang(sd),
				:lang(ug),
				:lang(ur),
				:lang(yi)
			)
		) {
		padding-right: 0.75rem;
	}
	.select:where([multiple]):not(
			:-moz-any(
				:lang(ae),
				:lang(ar),
				:lang(arc),
				:lang(bcc),
				:lang(bqi),
				:lang(ckb),
				:lang(dv),
				:lang(fa),
				:lang(glk),
				:lang(he),
				:lang(ku),
				:lang(mzn),
				:lang(nqo),
				:lang(pnb),
				:lang(ps),
				:lang(sd),
				:lang(ug),
				:lang(ur),
				:lang(yi)
			)
		) {
		padding-right: 0.75rem;
	}
	.select:where([multiple]):not(
			:is(
				:lang(ae),
				:lang(ar),
				:lang(arc),
				:lang(bcc),
				:lang(bqi),
				:lang(ckb),
				:lang(dv),
				:lang(fa),
				:lang(glk),
				:lang(he),
				:lang(ku),
				:lang(mzn),
				:lang(nqo),
				:lang(pnb),
				:lang(ps),
				:lang(sd),
				:lang(ug),
				:lang(ur),
				:lang(yi)
			)
		) {
		padding-right: 0.75rem;
	}
	.select:where([multiple]):-webkit-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		padding-left: 0.75rem;
	}
	.select:where([multiple]):-moz-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		padding-left: 0.75rem;
	}
	.select:where([multiple]):is(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		padding-left: 0.75rem;
	}
	.select select {
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
		width: calc(100% + 2.75rem);
		height: calc(100% - calc(var(--border) * 2));
		background: inherit;
		border-radius: inherit;
		border-style: none;
		align-items: center;
	}
	.select
		select:not(
			:-webkit-any(
				:lang(ae),
				:lang(ar),
				:lang(arc),
				:lang(bcc),
				:lang(bqi),
				:lang(ckb),
				:lang(dv),
				:lang(fa),
				:lang(glk),
				:lang(he),
				:lang(ku),
				:lang(mzn),
				:lang(nqo),
				:lang(pnb),
				:lang(ps),
				:lang(sd),
				:lang(ug),
				:lang(ur),
				:lang(yi)
			)
		) {
		margin-left: -0.75rem;
		margin-right: -1.75rem;
		padding-left: 0.75rem;
		padding-right: 1.75rem;
	}
	.select
		select:not(
			:-moz-any(
				:lang(ae),
				:lang(ar),
				:lang(arc),
				:lang(bcc),
				:lang(bqi),
				:lang(ckb),
				:lang(dv),
				:lang(fa),
				:lang(glk),
				:lang(he),
				:lang(ku),
				:lang(mzn),
				:lang(nqo),
				:lang(pnb),
				:lang(ps),
				:lang(sd),
				:lang(ug),
				:lang(ur),
				:lang(yi)
			)
		) {
		margin-left: -0.75rem;
		margin-right: -1.75rem;
		padding-left: 0.75rem;
		padding-right: 1.75rem;
	}
	.select
		select:not(
			:is(
				:lang(ae),
				:lang(ar),
				:lang(arc),
				:lang(bcc),
				:lang(bqi),
				:lang(ckb),
				:lang(dv),
				:lang(fa),
				:lang(glk),
				:lang(he),
				:lang(ku),
				:lang(mzn),
				:lang(nqo),
				:lang(pnb),
				:lang(ps),
				:lang(sd),
				:lang(ug),
				:lang(ur),
				:lang(yi)
			)
		) {
		margin-left: -0.75rem;
		margin-right: -1.75rem;
		padding-left: 0.75rem;
		padding-right: 1.75rem;
	}
	.select
		select:-webkit-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		margin-left: -1.75rem;
		margin-right: -0.75rem;
		padding-left: 1.75rem;
		padding-right: 0.75rem;
	}
	.select
		select:-moz-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		margin-left: -1.75rem;
		margin-right: -0.75rem;
		padding-left: 1.75rem;
		padding-right: 0.75rem;
	}
	.select
		select:is(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		margin-left: -1.75rem;
		margin-right: -0.75rem;
		padding-left: 1.75rem;
		padding-right: 0.75rem;
	}
	.select select:focus,
	.select select:focus-within {
		--tw-outline-style: none;
		outline-style: none;
	}
	@media (forced-colors: active) {
		.select select:focus,
		.select select:focus-within {
			outline-offset: 2px;
			outline: 2px solid transparent;
		}
	}
	.select select:not(:last-child) {
		background-image: none;
	}
	.select
		select:not(:last-child):not(
			:-webkit-any(
				:lang(ae),
				:lang(ar),
				:lang(arc),
				:lang(bcc),
				:lang(bqi),
				:lang(ckb),
				:lang(dv),
				:lang(fa),
				:lang(glk),
				:lang(he),
				:lang(ku),
				:lang(mzn),
				:lang(nqo),
				:lang(pnb),
				:lang(ps),
				:lang(sd),
				:lang(ug),
				:lang(ur),
				:lang(yi)
			)
		) {
		margin-right: -1.375rem;
	}
	.select
		select:not(:last-child):not(
			:-moz-any(
				:lang(ae),
				:lang(ar),
				:lang(arc),
				:lang(bcc),
				:lang(bqi),
				:lang(ckb),
				:lang(dv),
				:lang(fa),
				:lang(glk),
				:lang(he),
				:lang(ku),
				:lang(mzn),
				:lang(nqo),
				:lang(pnb),
				:lang(ps),
				:lang(sd),
				:lang(ug),
				:lang(ur),
				:lang(yi)
			)
		) {
		margin-right: -1.375rem;
	}
	.select
		select:not(:last-child):not(
			:is(
				:lang(ae),
				:lang(ar),
				:lang(arc),
				:lang(bcc),
				:lang(bqi),
				:lang(ckb),
				:lang(dv),
				:lang(fa),
				:lang(glk),
				:lang(he),
				:lang(ku),
				:lang(mzn),
				:lang(nqo),
				:lang(pnb),
				:lang(ps),
				:lang(sd),
				:lang(ug),
				:lang(ur),
				:lang(yi)
			)
		) {
		margin-right: -1.375rem;
	}
	.select
		select:not(:last-child):-webkit-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		margin-left: -1.375rem;
	}
	.select
		select:not(:last-child):-moz-any(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		margin-left: -1.375rem;
	}
	.select
		select:not(:last-child):is(
			:lang(ae),
			:lang(ar),
			:lang(arc),
			:lang(bcc),
			:lang(bqi),
			:lang(ckb),
			:lang(dv),
			:lang(fa),
			:lang(glk),
			:lang(he),
			:lang(ku),
			:lang(mzn),
			:lang(nqo),
			:lang(pnb),
			:lang(ps),
			:lang(sd),
			:lang(ug),
			:lang(ur),
			:lang(yi)
		) {
		margin-left: -1.375rem;
	}
	.select:focus,
	.select:focus-within {
		--input-color: var(--color-base-content);
		box-shadow: 0 1px var(--input-color);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.select:focus,
		.select:focus-within {
			box-shadow: 0 1px
				color-mix(
					in oklab,
					var(--input-color) calc(var(--depth) * 10%),
					transparent
				);
		}
	}
	.select:focus,
	.select:focus-within {
		outline: 2px solid var(--input-color);
		outline-offset: 2px;
		isolation: isolate;
		z-index: 1;
	}
	fieldset:disabled .select {
		cursor: not-allowed;
		border-color: var(--color-base-200);
		background-color: var(--color-base-200);
		color: var(--color-base-content);
	}
	.select:has(> select[disabled]) {
		cursor: not-allowed;
		border-color: var(--color-base-200);
		background-color: var(--color-base-200);
		color: var(--color-base-content);
	}
	.select:-webkit-any(:disabled, [disabled]) {
		cursor: not-allowed;
		border-color: var(--color-base-200);
		background-color: var(--color-base-200);
		color: var(--color-base-content);
	}
	.select:-moz-any(:disabled, [disabled]) {
		cursor: not-allowed;
		border-color: var(--color-base-200);
		background-color: var(--color-base-200);
		color: var(--color-base-content);
	}
	.select:is(:disabled, [disabled]) {
		cursor: not-allowed;
		border-color: var(--color-base-200);
		background-color: var(--color-base-200);
		color: var(--color-base-content);
	}
	@supports (color: color-mix(in lab, red, red)) {
		fieldset:disabled .select {
			color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
		}
		.select:has(> select[disabled]) {
			color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
		}
		.select:-webkit-any(:disabled, [disabled]) {
			color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
		}
		.select:-moz-any(:disabled, [disabled]) {
			color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
		}
		.select:is(:disabled, [disabled]) {
			color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
		}
	}
	:-webkit-any(
		.select:has(> select[disabled]),
		.select:-webkit-any(:disabled, [disabled]),
		fieldset:disabled .select
	)::placeholder {
		color: var(--color-base-content);
	}
	:-moz-any(
		.select:has(> select[disabled]),
		.select:-moz-any(:disabled, [disabled]),
		fieldset:disabled .select
	)::placeholder {
		color: var(--color-base-content);
	}
	:is(
		.select:has(> select[disabled]),
		.select:is(:disabled, [disabled]),
		fieldset:disabled .select
	)::placeholder {
		color: var(--color-base-content);
	}
	@supports (color: color-mix(in lab, red, red)) {
		:-webkit-any(
			.select:has(> select[disabled]),
			.select:-webkit-any(:disabled, [disabled]),
			fieldset:disabled .select
		)::placeholder {
			color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
		}
		:-moz-any(
			.select:has(> select[disabled]),
			.select:-moz-any(:disabled, [disabled]),
			fieldset:disabled .select
		)::placeholder {
			color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
		}
		:is(
			.select:has(> select[disabled]),
			.select:is(:disabled, [disabled]),
			fieldset:disabled .select
		)::placeholder {
			color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
		}
	}
	.select:has(> select[disabled]) > select[disabled] {
		cursor: not-allowed;
	}
	@supports (
		(-webkit-appearance: base-select) or (-moz-appearance: base-select) or
			(appearance: base-select)
	) {
		.select,
		.select select {
			-webkit-appearance: base-select;
			-moz-appearance: base-select;
			appearance: base-select;
		}
		:is(.select, .select select)::picker(select) {
			-webkit-appearance: base-select;
			-moz-appearance: base-select;
			appearance: base-select;
		}
	}
	:is(.select, .select select)::picker(select) {
		color: inherit;
		border: var(--border) solid var(--color-base-200);
		border-radius: var(--radius-box);
		background-color: inherit;
		max-height: min(24rem, 70dvh);
		box-shadow: 0 2px calc(var(--depth) * 3px)-2px rgba(0, 0, 0, 0.2);
		box-shadow:
			0 20px 25px -5px rgba(0, 0, 0, calc(var(--depth) * 0.1)),
			0 8px 10px -6px rgba(0, 0, 0, calc(var(--depth) * 0.1));
		margin-top: 0.5rem;
		margin-bottom: 0.5rem;
		margin-left: 0.5rem;
		margin-right: 0.5rem;
		padding: 0.5rem;
		translate: -0.5rem;
	}
	@supports (color: color(display-p3 0 0 0)) {
		:is(.select, .select select)::picker(select) {
			box-shadow: 0 2px calc(var(--depth) * 3px)-2px color(display-p3 0 0 0/0.2);
		}
	}
	@supports (color: lab(0% 0 0)) {
		:is(.select, .select select)::picker(select) {
			box-shadow: 0 2px calc(var(--depth) * 3px)-2px lab(0% 0 0/0.2);
		}
	}
	:is(.select, .select select)::picker-icon {
		display: none;
	}
	:is(.select, .select select) optgroup {
		padding-top: 0.5em;
	}
	:is(.select, .select select) optgroup option:first-child {
		margin-top: 0.5em;
	}
	:is(.select, .select select) option {
		border-radius: var(--radius-field);
		white-space: normal;
		padding-top: 0.375rem;
		padding-bottom: 0.375rem;
		padding-left: 0.75rem;
		padding-right: 0.75rem;
		transition-property: color, background-color;
		transition-duration: 0.2s;
		transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	}
	:is(.select, .select select) option:not(:disabled):hover {
		cursor: pointer;
		background-color: var(--color-base-content);
	}
	:is(.select, .select select) option:not(:disabled):focus-visible {
		cursor: pointer;
		background-color: var(--color-base-content);
	}
	@supports (color: color-mix(in lab, red, red)) {
		:is(.select, .select select) option:not(:disabled):hover {
			background-color: color-mix(
				in oklab,
				var(--color-base-content) 10%,
				transparent
			);
		}
		:is(.select, .select select) option:not(:disabled):focus-visible {
			background-color: color-mix(
				in oklab,
				var(--color-base-content) 10%,
				transparent
			);
		}
	}
	:is(.select, .select select) option:not(:disabled):hover {
		--tw-outline-style: none;
		outline-style: none;
	}
	:is(.select, .select select) option:not(:disabled):focus-visible {
		--tw-outline-style: none;
		outline-style: none;
	}
	@media (forced-colors: active) {
		:is(.select, .select select) option:not(:disabled):hover {
			outline-offset: 2px;
			outline: 2px solid transparent;
		}
		:is(.select, .select select) option:not(:disabled):focus-visible {
			outline-offset: 2px;
			outline: 2px solid transparent;
		}
	}
	:is(.select, .select select) option:not(:disabled):active {
		background-color: var(--color-neutral);
		color: var(--color-neutral-content);
		box-shadow: 0 2px calc(var(--depth) * 3px)-2px var(--color-neutral);
	}
	.relative {
		position: relative;
	}
	.static {
		position: static;
	}
	.textarea {
		border: var(--border) solid transparent;
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
		border-radius: var(--radius-field);
		background-color: var(--color-base-100);
		vertical-align: middle;
		width: max(3rem, min(20rem, 100%));
		min-height: 5rem;
		font-size: max(var(--font-size, 0.875rem), 0.875rem);
		touch-action: manipulation;
		border-color: var(--input-color);
		box-shadow:
			0 1px var(--input-color) inset,
			0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
		flex-shrink: 1;
		padding-top: 0.5rem;
		padding-bottom: 0.5rem;
		padding-left: 0.75rem;
		padding-right: 0.75rem;
	}
	@supports (color: color-mix(in lab, red, red)) {
		.textarea {
			box-shadow:
				0 1px
					color-mix(
						in oklab,
						var(--input-color) calc(var(--depth) * 10%),
						transparent
					)
					inset,
				0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
		}
	}
	.textarea {
		--input-color: var(--color-base-content);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.textarea {
			--input-color: color-mix(
				in oklab,
				var(--color-base-content) 20%,
				transparent
			);
		}
	}
	.textarea textarea {
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
		background-color: transparent;
		border: none;
	}
	.textarea textarea:focus,
	.textarea textarea:focus-within {
		--tw-outline-style: none;
		outline-style: none;
	}
	@media (forced-colors: active) {
		.textarea textarea:focus,
		.textarea textarea:focus-within {
			outline-offset: 2px;
			outline: 2px solid transparent;
		}
	}
	.textarea:focus,
	.textarea:focus-within {
		--input-color: var(--color-base-content);
		box-shadow: 0 1px var(--input-color);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.textarea:focus,
		.textarea:focus-within {
			box-shadow: 0 1px
				color-mix(
					in oklab,
					var(--input-color) calc(var(--depth) * 10%),
					transparent
				);
		}
	}
	.textarea:focus,
	.textarea:focus-within {
		outline: 2px solid var(--input-color);
		outline-offset: 2px;
		isolation: isolate;
	}
	@media (pointer: coarse) {
		@supports (-webkit-touch-callout: none) {
			.textarea:focus,
			.textarea:focus-within {
				--font-size: 1rem;
			}
		}
	}
	.textarea:has(> textarea[disabled]) {
		cursor: not-allowed;
		border-color: var(--color-base-200);
		background-color: var(--color-base-200);
		color: var(--color-base-content);
	}
	.textarea:-webkit-any(:disabled, [disabled]) {
		cursor: not-allowed;
		border-color: var(--color-base-200);
		background-color: var(--color-base-200);
		color: var(--color-base-content);
	}
	.textarea:-moz-any(:disabled, [disabled]) {
		cursor: not-allowed;
		border-color: var(--color-base-200);
		background-color: var(--color-base-200);
		color: var(--color-base-content);
	}
	.textarea:is(:disabled, [disabled]) {
		cursor: not-allowed;
		border-color: var(--color-base-200);
		background-color: var(--color-base-200);
		color: var(--color-base-content);
	}
	@supports (color: color-mix(in lab, red, red)) {
		.textarea:has(> textarea[disabled]) {
			color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
		}
		.textarea:-webkit-any(:disabled, [disabled]) {
			color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
		}
		.textarea:-moz-any(:disabled, [disabled]) {
			color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
		}
		.textarea:is(:disabled, [disabled]) {
			color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
		}
	}
	:-webkit-any(
		.textarea:has(> textarea[disabled]),
		.textarea:-webkit-any(:disabled, [disabled])
	)::placeholder {
		color: var(--color-base-content);
	}
	:-moz-any(
		.textarea:has(> textarea[disabled]),
		.textarea:-moz-any(:disabled, [disabled])
	)::placeholder {
		color: var(--color-base-content);
	}
	:is(
		.textarea:has(> textarea[disabled]),
		.textarea:is(:disabled, [disabled])
	)::placeholder {
		color: var(--color-base-content);
	}
	@supports (color: color-mix(in lab, red, red)) {
		:-webkit-any(
			.textarea:has(> textarea[disabled]),
			.textarea:-webkit-any(:disabled, [disabled])
		)::placeholder {
			color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
		}
		:-moz-any(
			.textarea:has(> textarea[disabled]),
			.textarea:-moz-any(:disabled, [disabled])
		)::placeholder {
			color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
		}
		:is(
			.textarea:has(> textarea[disabled]),
			.textarea:is(:disabled, [disabled])
		)::placeholder {
			color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
		}
	}
	.textarea:has(> textarea[disabled]) {
		box-shadow: none;
	}
	.textarea:-webkit-any(:disabled, [disabled]) {
		box-shadow: none;
	}
	.textarea:-moz-any(:disabled, [disabled]) {
		box-shadow: none;
	}
	.textarea:is(:disabled, [disabled]) {
		box-shadow: none;
	}
	.textarea:has(> textarea[disabled]) > textarea[disabled] {
		cursor: not-allowed;
	}
	.stack {
		grid-template-rows: 3px 4px 1fr 4px 3px;
		grid-template-columns: 3px 4px 1fr 4px 3px;
		display: inline-grid;
	}
	.stack > * {
		width: 100%;
		height: 100%;
	}
	.stack > :nth-child(n + 2) {
		opacity: 0.7;
		width: 100%;
	}
	.stack > :nth-child(2) {
		z-index: 2;
		opacity: 0.9;
	}
	.stack > :first-child {
		z-index: 3;
		width: 100%;
	}
	:-webkit-any(.stack, .stack.stack-bottom) > * {
		grid-area: 3/3/6/4;
	}
	:-moz-any(.stack, .stack.stack-bottom) > * {
		grid-area: 3/3/6/4;
	}
	:is(.stack, .stack.stack-bottom) > * {
		grid-area: 3/3/6/4;
	}
	:-webkit-any(.stack, .stack.stack-bottom) > :nth-child(2) {
		grid-area: 2/2/5/5;
	}
	:-moz-any(.stack, .stack.stack-bottom) > :nth-child(2) {
		grid-area: 2/2/5/5;
	}
	:is(.stack, .stack.stack-bottom) > :nth-child(2) {
		grid-area: 2/2/5/5;
	}
	:-webkit-any(.stack, .stack.stack-bottom) > :first-child {
		grid-area: 1/1/4/6;
	}
	:-moz-any(.stack, .stack.stack-bottom) > :first-child {
		grid-area: 1/1/4/6;
	}
	:is(.stack, .stack.stack-bottom) > :first-child {
		grid-area: 1/1/4/6;
	}
	.stack.stack-top > * {
		grid-area: 1/3/4/4;
	}
	.stack.stack-top > :nth-child(2) {
		grid-area: 2/2/5/5;
	}
	.stack.stack-top > :first-child {
		grid-area: 3/1/6/6;
	}
	.stack.stack-start > * {
		grid-area: 3/1/4/4;
	}
	.stack.stack-start > :nth-child(2) {
		grid-area: 2/2/5/5;
	}
	.stack.stack-start > :first-child {
		grid-area: 1/3/6/6;
	}
	.stack.stack-end > * {
		grid-area: 3/3/4/6;
	}
	.stack.stack-end > :nth-child(2) {
		grid-area: 2/2/5/5;
	}
	.stack.stack-end > :first-child {
		grid-area: 1/1/6/4;
	}
	.z-10 {
		z-index: 10;
	}
	.container {
		width: 100%;
	}
	@media (min-width: 40rem) {
		.container {
			max-width: 40rem;
		}
	}
	@media (min-width: 48rem) {
		.container {
			max-width: 48rem;
		}
	}
	@media (min-width: 64rem) {
		.container {
			max-width: 64rem;
		}
	}
	@media (min-width: 80rem) {
		.container {
			max-width: 80rem;
		}
	}
	@media (min-width: 96rem) {
		.container {
			max-width: 96rem;
		}
	}
	.mx-auto {
		margin-left: auto;
		margin-right: auto;
	}
	.status {
		aspect-ratio: 1;
		border-radius: var(--radius-selector);
		background-color: var(--color-base-content);
		width: 0.5rem;
		height: 0.5rem;
		display: inline-block;
	}
	@supports (color: color-mix(in lab, red, red)) {
		.status {
			background-color: color-mix(
				in oklab,
				var(--color-base-content) 20%,
				transparent
			);
		}
	}
	.status {
		vertical-align: middle;
		color: rgba(0, 0, 0, 0.3);
		background-position: 50%;
		background-repeat: no-repeat;
	}
	@supports (color: color-mix(in lab, red, red)) {
		.status {
			color: color-mix(in oklab, var(--color-black) 30%, transparent);
		}
	}
	.status {
		background-image: radial-gradient(
			circle at 35% 30%,
			oklch(1 0 0 / calc(var(--depth) * 0.5)),
			transparent
		);
		box-shadow: 0 2px 3px -1px;
	}
	@supports (color: color-mix(in lab, red, red)) {
		.status {
			box-shadow: 0 2px 3px -1px
				color-mix(in oklab, currentColor calc(var(--depth) * 100%), transparent);
		}
	}
	.flex {
		display: flex;
	}
	.h-full {
		height: 100%;
	}
	.h-screen {
		height: 100vh;
	}
	.w-full {
		width: 100%;
	}
	.grow {
		flex-grow: 1;
	}
	.link {
		cursor: pointer;
		-webkit-text-decoration-line: underline;
		text-decoration-line: underline;
	}
	.link:focus {
		--tw-outline-style: none;
		outline-style: none;
	}
	@media (forced-colors: active) {
		.link:focus {
			outline-offset: 2px;
			outline: 2px solid transparent;
		}
	}
	.link:focus-visible {
		outline-offset: 2px;
		outline: 2px solid;
	}
	.flex-col {
		flex-direction: column;
	}
	.items-center {
		align-items: center;
	}
	.justify-between {
		justify-content: space-between;
	}
	.gap-2 {
		gap: calc(var(--spacing) * 2);
	}
	.gap-x-2 {
		column-gap: calc(var(--spacing) * 2);
	}
	.gap-y-4 {
		row-gap: calc(var(--spacing) * 4);
	}
	.overflow-hidden {
		overflow: hidden;
	}
	.border-t {
		border-top-style: var(--tw-border-style);
		border-top-width: 1px;
	}
	.border-neutral-800 {
		border-color: var(--color-neutral-800);
	}
	.p-4 {
		padding: calc(var(--spacing) * 4);
	}
	.px-4 {
		padding-inline: calc(var(--spacing) * 4);
	}
	.py-2 {
		padding-block: calc(var(--spacing) * 2);
	}
	.text-xl {
		font-size: var(--text-xl);
		line-height: var(--tw-leading, var(--text-xl--line-height));
	}
	.font-bold {
		--tw-font-weight: var(--font-weight-bold);
		font-weight: var(--font-weight-bold);
	}
	.whitespace-nowrap {
		white-space: nowrap;
	}
	.antialiased {
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	}
	.btn-primary {
		--btn-color: var(--color-primary);
		--btn-fg: var(--color-primary-content);
	}
	@media (min-width: 48rem) {
		.md\:w-auto {
			width: auto;
		}
		.md\:flex-row {
			flex-direction: row;
		}
		.md\:gap-4 {
			gap: calc(var(--spacing) * 4);
		}
		.md\:gap-x-4 {
			column-gap: calc(var(--spacing) * 4);
		}
		.md\:gap-y-8 {
			row-gap: calc(var(--spacing) * 8);
		}
		.md\:p-8 {
			padding: calc(var(--spacing) * 8);
		}
		.md\:px-8 {
			padding-inline: calc(var(--spacing) * 8);
		}
		.md\:py-4 {
			padding-block: calc(var(--spacing) * 4);
		}
	}
}
:root {
	--background: #fff;
	--foreground: #171717;
}
@media (prefers-color-scheme: dark) {
	:root {
		--background: #0a0a0a;
		--foreground: #ededed;
	}
}
body {
	background: var(--background);
	color: var(--foreground);
	font-family: Arial, Helvetica, sans-serif;
}
@keyframes rating {
	0%,
	40% {
		filter: brightness(1.05) contrast(1.05);
		scale: 1.1;
	}
}
@keyframes dropdown {
	0% {
		opacity: 0;
	}
}
@keyframes radio {
	0% {
		padding: 5px;
	}
	50% {
		padding: 3px;
	}
}
@keyframes toast {
	0% {
		opacity: 0;
		scale: 0.9;
	}
	to {
		opacity: 1;
		scale: 1;
	}
}
@keyframes skeleton {
	0% {
		background-position: 150%;
	}
	to {
		background-position: -50%;
	}
}
@keyframes progress {
	50% {
		background-position-x: -115%;
	}
}
@property --tw-border-style {
	syntax: '*';
	inherits: false;
	initial-value: solid;
}
@property --tw-font-weight {
	syntax: '*';
	inherits: false;
}
@font-face {
	font-family: Geist;
	font-style: normal;
	font-weight: 100 900;
	font-display: swap;
	src: url(../media/8a480f0b521d4e75-s.8e0177b5.woff2) format('woff2');
	unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116;
}
@font-face {
	font-family: Geist;
	font-style: normal;
	font-weight: 100 900;
	font-display: swap;
	src: url(../media/7178b3e590c64307-s.b97b3418.woff2) format('woff2');
	unicode-range:
		U+100-2BA, U+2BD-2C5, U+2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329,
		U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0,
		U+2113, U+2C60-2C7F, U+A720-A7FF;
}
@font-face {
	font-family: Geist;
	font-style: normal;
	font-weight: 100 900;
	font-display: swap;
	src: url(../media/caa3a2e1cccd8315-s.p.853070df.woff2) format('woff2');
	unicode-range:
		U+??, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329,
		U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
@font-face {
	font-family: Geist Fallback;
	src: local(Arial);
	ascent-override: 95.94%;
	descent-override: 28.16%;
	line-gap-override: 0%;
	size-adjust: 104.76%;
}
.geist_67d76b20-module__yOMf8W__className {
	font-family:
		Geist,
		Geist Fallback;
	font-style: normal;
}
.geist_67d76b20-module__yOMf8W__variable {
	--font-geist-sans: 'Geist', 'Geist Fallback';
}
@font-face {
	font-family: Geist Mono;
	font-style: normal;
	font-weight: 100 900;
	font-display: swap;
	src: url(../media/4fa387ec64143e14-s.c1fdd6c2.woff2) format('woff2');
	unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116;
}
@font-face {
	font-family: Geist Mono;
	font-style: normal;
	font-weight: 100 900;
	font-display: swap;
	src: url(../media/bbc41e54d2fcbd21-s.799d8ef8.woff2) format('woff2');
	unicode-range:
		U+100-2BA, U+2BD-2C5, U+2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329,
		U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0,
		U+2113, U+2C60-2C7F, U+A720-A7FF;
}
@font-face {
	font-family: Geist Mono;
	font-style: normal;
	font-weight: 100 900;
	font-display: swap;
	src: url(../media/797e433ab948586e-s.p.dbea232f.woff2) format('woff2');
	unicode-range:
		U+??, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329,
		U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
@font-face {
	font-family: Geist Mono Fallback;
	src: local(Arial);
	ascent-override: 74.67%;
	descent-override: 21.92%;
	line-gap-override: 0%;
	size-adjust: 134.59%;
}
.geist_mono_66039167-module__O0reuq__className {
	font-family:
		Geist Mono,
		Geist Mono Fallback;
	font-style: normal;
}
.geist_mono_66039167-module__O0reuq__variable {
	--font-geist-mono: 'Geist Mono', 'Geist Mono Fallback';
}
