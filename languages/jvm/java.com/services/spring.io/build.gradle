plugins {
  // âœ… Java plugin
  id 'java'
  // âœ… CheckStyle
  id 'checkstyle'
  // âœ… PMD
  id 'pmd'
  // âœ… Spotbugs
  id 'com.github.spotbugs' version '6.0.18'
  // âœ… Spotless
  id 'com.diffplug.spotless' version '8.0.0'
  // âœ… Spring Boot plugin
  id 'org.springframework.boot' version '3.5.7'
  // âœ… Dependency management plugin for Spring libraries
  id 'io.spring.dependency-management' version '1.1.7'
}

group = 'io.proxy.reverse'
version = '0.0.1-SNAPSHOT'
description = 'reverse-proxy'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

java {
  sourceCompatibility = JavaVersion.VERSION_21
  targetCompatibility = JavaVersion.VERSION_21
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

// ðŸ“¦ Gradle uses this as the package repository
repositories {
  mavenCentral()
}

dependencies {
  // âœ… Core Spring Boot Web for REST APIs
  implementation 'org.springframework.boot:spring-boot-starter-web'
  // âœ… (Optional) Spring Boot Testing support
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// âœ… Use JUnit Platform for tests
tasks.named('test') {
  useJUnitPlatform()
}

/**
 * -------------------------
 * Checkstyle Configuration
 * -------------------------
 */
checkstyle {
  toolVersion = '12.1.1' // Latest stable version
  config = resources.text.fromFile('config/checkstyle/checkstyle.xml')
  ignoreFailures = false  // Fail build if violations are found
}

tasks.withType(Checkstyle).configureEach {
  reports {
    xml.required = false
    html.required = true
    html.outputLocation = file("$buildDir/reports/checkstyle/checkstyle.html")
  }
}

/**
 * -------------------------
 * PMD Configuration
 * -------------------------
 */
pmd {
  toolVersion = '7.17.0' // Latest PMD version
  ruleSets = [] // We'll use a custom ruleset instead of defaults
  ruleSetFiles = files('config/pmd/pmd-ruleset.xml')
  ignoreFailures = true  // Fail build if PMD violations are found
}

tasks.withType(Pmd).configureEach {
  exclude "**/avro/**"
  reports {
    xml.required = false
    html.required = true
    html.outputLocation = file("$buildDir/reports/pmd/pmd.html")
  }
}

// --- SpotBugs configuration ---
spotbugs {
  toolVersion = '4.8.3'       // SpotBugs engine version
  ignoreFailures = false      // fail build on violations
  effort = 'max'              // min | default | max
  reportLevel = 'low'         // low | medium | high
  showProgress = true
}

spotless {
  java {
    googleJavaFormat()  // auto-format according to Google Java Style
  }
}

// Enable dependency locking for reproducible builds
dependencyLocking {
  // Lock all configurations (implementation, testImplementation, etc.)
  lockAllConfigurations()
}
