plugins {
  // ‚úÖ Java plugin
    id 'java'
  // ‚úÖ CheckStyle
  id 'checkstyle'
  // ‚úÖ PMD
  id 'pmd'
  // ‚úÖ Spotbugs
  id 'com.github.spotbugs' version '6.4.4'
  // ‚úÖ Spotless
  id 'com.diffplug.spotless' version '8.0.0'
  // ‚úÖ Application
  id 'application'
}

group = 'io.proxy.reverse'
version = '0.0.1'

application {
    mainClass = 'io.proxy.reverse.Application'
}

repositories {
    mavenCentral()
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

dependencies {
    // üåê Javalin core (web framework)
    implementation 'io.javalin:javalin:6.7.0'

    // ‚öôÔ∏è Jetty server (already included, but explicitly pinned for stability)
    implementation 'org.eclipse.jetty:jetty-server:12.1.3'

    // üß† Logging (SLF4J + Simple)
    implementation 'org.slf4j:slf4j-simple:2.0.17'

    // üß™ Testing (JUnit 5)
    testImplementation 'org.junit.jupiter:junit-jupiter-api:6.0.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:6.0.0'
}

test {
    useJUnitPlatform()
}

/**
 * -------------------------
 * Checkstyle Configuration
 * -------------------------
 */
checkstyle {
  toolVersion = '12.1.1' // Latest stable version
  config = resources.text.fromFile('config/checkstyle/checkstyle.xml')
  ignoreFailures = false  // Fail build if violations are found
}

tasks.withType(Checkstyle).configureEach {
  reports {
    xml.required = false
    html.required = true
    html.outputLocation = file("$buildDir/reports/checkstyle/checkstyle.html")
  }
}

/**
 * -------------------------
 * PMD Configuration
 * -------------------------
 */
pmd {
  toolVersion = '7.18.0' // Latest PMD version
  ruleSets = [] // We'll use a custom ruleset instead of defaults
  ruleSetFiles = files('config/pmd/pmd-ruleset.xml')
  ignoreFailures = true  // Fail build if PMD violations are found
}

tasks.withType(Pmd).configureEach {
  exclude "**/avro/**"
  reports {
    xml.required = false
    html.required = true
    html.outputLocation = file("$buildDir/reports/pmd/pmd.html")
  }
}

// --- SpotBugs configuration ---
spotbugs {
  toolVersion = '4.9.8'       // SpotBugs engine version
  ignoreFailures = false      // fail build on violations
  effort = 'max'              // min | default | max
  reportLevel = 'low'         // low | medium | high
  showProgress = true
}

spotless {
  java {
    googleJavaFormat()  // auto-format according to Google Java Style
  }
}

// Enable dependency locking for reproducible builds
dependencyLocking {
  // Lock all configurations (implementation, testImplementation, etc.)
  lockAllConfigurations()
}
