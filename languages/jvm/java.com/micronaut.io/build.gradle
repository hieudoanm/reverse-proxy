plugins {
  // ✅ Java plugin
  id "java"
  // ✅ CheckStyle
  id 'checkstyle'
  // ✅ PMD
  id 'pmd'
  // ✅ Spotless
  id 'com.diffplug.spotless' version '8.0.0'
  // ✅ Micronaut
  id "io.micronaut.application" version "4.6.0"
}

application {
  mainClass.set("io.proxy.reverse.Application")
}

version = "0.0.1"
group = "io.proxy.reverse"

repositories {
  mavenCentral()
}

micronaut {
  version("4.3.6")  // ✅ Micronaut core version
  runtime("netty")
  testRuntime("junit5")
  processing {
    incremental(true)
    annotations("io.proxy.reverse.*")
  }
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

dependencies {
  implementation("io.micronaut:micronaut-jackson-databind")
  implementation("io.micronaut:micronaut-http-client")
  implementation("io.micronaut:micronaut-http-server-netty")
  implementation("io.micronaut:micronaut-runtime")

  runtimeOnly("ch.qos.logback:logback-classic")

  testImplementation("io.micronaut.test:micronaut-test-junit5")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
}

test {
  useJUnitPlatform()
}

/**
 * -------------------------
 * Checkstyle Configuration
 * -------------------------
 */
checkstyle {
  toolVersion = '12.1.1' // Latest stable version
  config = resources.text.fromFile('config/checkstyle/checkstyle.xml')
  ignoreFailures = false  // Fail build if violations are found
}

tasks.withType(Checkstyle).configureEach {
  reports {
    xml.required = false
    html.required = true
    html.outputLocation = file("$buildDir/reports/checkstyle/checkstyle.html")
  }
}

/**
 * -------------------------
 * PMD Configuration
 * -------------------------
 */
pmd {
  toolVersion = '7.17.0' // Latest PMD version
  ruleSets = [] // We'll use a custom ruleset instead of defaults
  ruleSetFiles = files('config/pmd/pmd-ruleset.xml')
  ignoreFailures = true  // Fail build if PMD violations are found
}

tasks.withType(Pmd).configureEach {
  exclude "**/avro/**"
  reports {
    xml.required = false
    html.required = true
    html.outputLocation = file("$buildDir/reports/pmd/pmd.html")
  }
}

spotless {
  java {
    googleJavaFormat()  // auto-format according to Google Java Style
  }
}

// Enable dependency locking for reproducible builds
dependencyLocking {
  // Lock all configurations (implementation, testImplementation, etc.)
  lockAllConfigurations()
}
